
003Add.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001134  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080012e4  080012e4  000112e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001324  08001324  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001324  08001324  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001324  08001324  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001324  08001324  00011324  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001328  08001328  00011328  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800132c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000170  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001d4  200001d4  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000915  00000000  00000000  000200d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000313  00000000  00000000  000209ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000110  00000000  00000000  00020d00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000b8  00000000  00000000  00020e10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002b18  00000000  00000000  00020ec8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000013cb  00000000  00000000  000239e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000972c  00000000  00000000  00024dab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000ae0  00000000  00000000  0002e4d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000062  00000000  00000000  0002efb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080012cc 	.word	0x080012cc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	080012cc 	.word	0x080012cc

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:
int g_data2 = 200;
int result = 0;


int main(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	af00      	add	r7, sp, #0
    result = g_data1 + g_data2;
 8000294:	4b06      	ldr	r3, [pc, #24]	; (80002b0 <main+0x20>)
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	4b06      	ldr	r3, [pc, #24]	; (80002b4 <main+0x24>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	4413      	add	r3, r2
 800029e:	4a06      	ldr	r2, [pc, #24]	; (80002b8 <main+0x28>)
 80002a0:	6013      	str	r3, [r2, #0]

    printf("Result = %d\n", result);
 80002a2:	4b05      	ldr	r3, [pc, #20]	; (80002b8 <main+0x28>)
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	4619      	mov	r1, r3
 80002a8:	4804      	ldr	r0, [pc, #16]	; (80002bc <main+0x2c>)
 80002aa:	f000 f999 	bl	80005e0 <iprintf>


	for(;;);
 80002ae:	e7fe      	b.n	80002ae <main+0x1e>
 80002b0:	20000000 	.word	0x20000000
 80002b4:	20000004 	.word	0x20000004
 80002b8:	20000080 	.word	0x20000080
 80002bc:	080012e4 	.word	0x080012e4

080002c0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	b086      	sub	sp, #24
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	60f8      	str	r0, [r7, #12]
 80002c8:	60b9      	str	r1, [r7, #8]
 80002ca:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002cc:	2300      	movs	r3, #0
 80002ce:	617b      	str	r3, [r7, #20]
 80002d0:	e00a      	b.n	80002e8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002d2:	f3af 8000 	nop.w
 80002d6:	4601      	mov	r1, r0
 80002d8:	68bb      	ldr	r3, [r7, #8]
 80002da:	1c5a      	adds	r2, r3, #1
 80002dc:	60ba      	str	r2, [r7, #8]
 80002de:	b2ca      	uxtb	r2, r1
 80002e0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e2:	697b      	ldr	r3, [r7, #20]
 80002e4:	3301      	adds	r3, #1
 80002e6:	617b      	str	r3, [r7, #20]
 80002e8:	697a      	ldr	r2, [r7, #20]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	429a      	cmp	r2, r3
 80002ee:	dbf0      	blt.n	80002d2 <_read+0x12>
  }

  return len;
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	3718      	adds	r7, #24
 80002f6:	46bd      	mov	sp, r7
 80002f8:	bd80      	pop	{r7, pc}

080002fa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002fa:	b580      	push	{r7, lr}
 80002fc:	b086      	sub	sp, #24
 80002fe:	af00      	add	r7, sp, #0
 8000300:	60f8      	str	r0, [r7, #12]
 8000302:	60b9      	str	r1, [r7, #8]
 8000304:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000306:	2300      	movs	r3, #0
 8000308:	617b      	str	r3, [r7, #20]
 800030a:	e009      	b.n	8000320 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800030c:	68bb      	ldr	r3, [r7, #8]
 800030e:	1c5a      	adds	r2, r3, #1
 8000310:	60ba      	str	r2, [r7, #8]
 8000312:	781b      	ldrb	r3, [r3, #0]
 8000314:	4618      	mov	r0, r3
 8000316:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	697b      	ldr	r3, [r7, #20]
 800031c:	3301      	adds	r3, #1
 800031e:	617b      	str	r3, [r7, #20]
 8000320:	697a      	ldr	r2, [r7, #20]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	429a      	cmp	r2, r3
 8000326:	dbf1      	blt.n	800030c <_write+0x12>
  }
  return len;
 8000328:	687b      	ldr	r3, [r7, #4]
}
 800032a:	4618      	mov	r0, r3
 800032c:	3718      	adds	r7, #24
 800032e:	46bd      	mov	sp, r7
 8000330:	bd80      	pop	{r7, pc}

08000332 <_close>:

int _close(int file)
{
 8000332:	b480      	push	{r7}
 8000334:	b083      	sub	sp, #12
 8000336:	af00      	add	r7, sp, #0
 8000338:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800033a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800033e:	4618      	mov	r0, r3
 8000340:	370c      	adds	r7, #12
 8000342:	46bd      	mov	sp, r7
 8000344:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000348:	4770      	bx	lr

0800034a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800034a:	b480      	push	{r7}
 800034c:	b083      	sub	sp, #12
 800034e:	af00      	add	r7, sp, #0
 8000350:	6078      	str	r0, [r7, #4]
 8000352:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000354:	683b      	ldr	r3, [r7, #0]
 8000356:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800035a:	605a      	str	r2, [r3, #4]
  return 0;
 800035c:	2300      	movs	r3, #0
}
 800035e:	4618      	mov	r0, r3
 8000360:	370c      	adds	r7, #12
 8000362:	46bd      	mov	sp, r7
 8000364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000368:	4770      	bx	lr

0800036a <_isatty>:

int _isatty(int file)
{
 800036a:	b480      	push	{r7}
 800036c:	b083      	sub	sp, #12
 800036e:	af00      	add	r7, sp, #0
 8000370:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000372:	2301      	movs	r3, #1
}
 8000374:	4618      	mov	r0, r3
 8000376:	370c      	adds	r7, #12
 8000378:	46bd      	mov	sp, r7
 800037a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037e:	4770      	bx	lr

08000380 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000380:	b480      	push	{r7}
 8000382:	b085      	sub	sp, #20
 8000384:	af00      	add	r7, sp, #0
 8000386:	60f8      	str	r0, [r7, #12]
 8000388:	60b9      	str	r1, [r7, #8]
 800038a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800038c:	2300      	movs	r3, #0
}
 800038e:	4618      	mov	r0, r3
 8000390:	3714      	adds	r7, #20
 8000392:	46bd      	mov	sp, r7
 8000394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000398:	4770      	bx	lr
	...

0800039c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	b086      	sub	sp, #24
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003a4:	4a14      	ldr	r2, [pc, #80]	; (80003f8 <_sbrk+0x5c>)
 80003a6:	4b15      	ldr	r3, [pc, #84]	; (80003fc <_sbrk+0x60>)
 80003a8:	1ad3      	subs	r3, r2, r3
 80003aa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003ac:	697b      	ldr	r3, [r7, #20]
 80003ae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003b0:	4b13      	ldr	r3, [pc, #76]	; (8000400 <_sbrk+0x64>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	2b00      	cmp	r3, #0
 80003b6:	d102      	bne.n	80003be <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003b8:	4b11      	ldr	r3, [pc, #68]	; (8000400 <_sbrk+0x64>)
 80003ba:	4a12      	ldr	r2, [pc, #72]	; (8000404 <_sbrk+0x68>)
 80003bc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003be:	4b10      	ldr	r3, [pc, #64]	; (8000400 <_sbrk+0x64>)
 80003c0:	681a      	ldr	r2, [r3, #0]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4413      	add	r3, r2
 80003c6:	693a      	ldr	r2, [r7, #16]
 80003c8:	429a      	cmp	r2, r3
 80003ca:	d207      	bcs.n	80003dc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003cc:	f000 f9ac 	bl	8000728 <__errno>
 80003d0:	4603      	mov	r3, r0
 80003d2:	220c      	movs	r2, #12
 80003d4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003d6:	f04f 33ff 	mov.w	r3, #4294967295
 80003da:	e009      	b.n	80003f0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003dc:	4b08      	ldr	r3, [pc, #32]	; (8000400 <_sbrk+0x64>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003e2:	4b07      	ldr	r3, [pc, #28]	; (8000400 <_sbrk+0x64>)
 80003e4:	681a      	ldr	r2, [r3, #0]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4413      	add	r3, r2
 80003ea:	4a05      	ldr	r2, [pc, #20]	; (8000400 <_sbrk+0x64>)
 80003ec:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003ee:	68fb      	ldr	r3, [r7, #12]
}
 80003f0:	4618      	mov	r0, r3
 80003f2:	3718      	adds	r7, #24
 80003f4:	46bd      	mov	sp, r7
 80003f6:	bd80      	pop	{r7, pc}
 80003f8:	20020000 	.word	0x20020000
 80003fc:	00000400 	.word	0x00000400
 8000400:	20000084 	.word	0x20000084
 8000404:	200001d8 	.word	0x200001d8

08000408 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000408:	480d      	ldr	r0, [pc, #52]	; (8000440 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800040a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800040c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000410:	480c      	ldr	r0, [pc, #48]	; (8000444 <LoopForever+0x6>)
  ldr r1, =_edata
 8000412:	490d      	ldr	r1, [pc, #52]	; (8000448 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000414:	4a0d      	ldr	r2, [pc, #52]	; (800044c <LoopForever+0xe>)
  movs r3, #0
 8000416:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000418:	e002      	b.n	8000420 <LoopCopyDataInit>

0800041a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800041a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800041c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800041e:	3304      	adds	r3, #4

08000420 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000420:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000422:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000424:	d3f9      	bcc.n	800041a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000426:	4a0a      	ldr	r2, [pc, #40]	; (8000450 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000428:	4c0a      	ldr	r4, [pc, #40]	; (8000454 <LoopForever+0x16>)
  movs r3, #0
 800042a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800042c:	e001      	b.n	8000432 <LoopFillZerobss>

0800042e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800042e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000430:	3204      	adds	r2, #4

08000432 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000432:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000434:	d3fb      	bcc.n	800042e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000436:	f000 f97d 	bl	8000734 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800043a:	f7ff ff29 	bl	8000290 <main>

0800043e <LoopForever>:

LoopForever:
  b LoopForever
 800043e:	e7fe      	b.n	800043e <LoopForever>
  ldr   r0, =_estack
 8000440:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000444:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000448:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800044c:	0800132c 	.word	0x0800132c
  ldr r2, =_sbss
 8000450:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000454:	200001d4 	.word	0x200001d4

08000458 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000458:	e7fe      	b.n	8000458 <ADC_IRQHandler>
	...

0800045c <std>:
 800045c:	2300      	movs	r3, #0
 800045e:	b510      	push	{r4, lr}
 8000460:	4604      	mov	r4, r0
 8000462:	e9c0 3300 	strd	r3, r3, [r0]
 8000466:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800046a:	6083      	str	r3, [r0, #8]
 800046c:	8181      	strh	r1, [r0, #12]
 800046e:	6643      	str	r3, [r0, #100]	; 0x64
 8000470:	81c2      	strh	r2, [r0, #14]
 8000472:	6183      	str	r3, [r0, #24]
 8000474:	4619      	mov	r1, r3
 8000476:	2208      	movs	r2, #8
 8000478:	305c      	adds	r0, #92	; 0x5c
 800047a:	f000 f906 	bl	800068a <memset>
 800047e:	4b0d      	ldr	r3, [pc, #52]	; (80004b4 <std+0x58>)
 8000480:	6263      	str	r3, [r4, #36]	; 0x24
 8000482:	4b0d      	ldr	r3, [pc, #52]	; (80004b8 <std+0x5c>)
 8000484:	62a3      	str	r3, [r4, #40]	; 0x28
 8000486:	4b0d      	ldr	r3, [pc, #52]	; (80004bc <std+0x60>)
 8000488:	62e3      	str	r3, [r4, #44]	; 0x2c
 800048a:	4b0d      	ldr	r3, [pc, #52]	; (80004c0 <std+0x64>)
 800048c:	6323      	str	r3, [r4, #48]	; 0x30
 800048e:	4b0d      	ldr	r3, [pc, #52]	; (80004c4 <std+0x68>)
 8000490:	6224      	str	r4, [r4, #32]
 8000492:	429c      	cmp	r4, r3
 8000494:	d006      	beq.n	80004a4 <std+0x48>
 8000496:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800049a:	4294      	cmp	r4, r2
 800049c:	d002      	beq.n	80004a4 <std+0x48>
 800049e:	33d0      	adds	r3, #208	; 0xd0
 80004a0:	429c      	cmp	r4, r3
 80004a2:	d105      	bne.n	80004b0 <std+0x54>
 80004a4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80004a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004ac:	f000 b966 	b.w	800077c <__retarget_lock_init_recursive>
 80004b0:	bd10      	pop	{r4, pc}
 80004b2:	bf00      	nop
 80004b4:	08000605 	.word	0x08000605
 80004b8:	08000627 	.word	0x08000627
 80004bc:	0800065f 	.word	0x0800065f
 80004c0:	08000683 	.word	0x08000683
 80004c4:	20000088 	.word	0x20000088

080004c8 <stdio_exit_handler>:
 80004c8:	4a02      	ldr	r2, [pc, #8]	; (80004d4 <stdio_exit_handler+0xc>)
 80004ca:	4903      	ldr	r1, [pc, #12]	; (80004d8 <stdio_exit_handler+0x10>)
 80004cc:	4803      	ldr	r0, [pc, #12]	; (80004dc <stdio_exit_handler+0x14>)
 80004ce:	f000 b869 	b.w	80005a4 <_fwalk_sglue>
 80004d2:	bf00      	nop
 80004d4:	20000008 	.word	0x20000008
 80004d8:	08001029 	.word	0x08001029
 80004dc:	20000014 	.word	0x20000014

080004e0 <cleanup_stdio>:
 80004e0:	6841      	ldr	r1, [r0, #4]
 80004e2:	4b0c      	ldr	r3, [pc, #48]	; (8000514 <cleanup_stdio+0x34>)
 80004e4:	4299      	cmp	r1, r3
 80004e6:	b510      	push	{r4, lr}
 80004e8:	4604      	mov	r4, r0
 80004ea:	d001      	beq.n	80004f0 <cleanup_stdio+0x10>
 80004ec:	f000 fd9c 	bl	8001028 <_fflush_r>
 80004f0:	68a1      	ldr	r1, [r4, #8]
 80004f2:	4b09      	ldr	r3, [pc, #36]	; (8000518 <cleanup_stdio+0x38>)
 80004f4:	4299      	cmp	r1, r3
 80004f6:	d002      	beq.n	80004fe <cleanup_stdio+0x1e>
 80004f8:	4620      	mov	r0, r4
 80004fa:	f000 fd95 	bl	8001028 <_fflush_r>
 80004fe:	68e1      	ldr	r1, [r4, #12]
 8000500:	4b06      	ldr	r3, [pc, #24]	; (800051c <cleanup_stdio+0x3c>)
 8000502:	4299      	cmp	r1, r3
 8000504:	d004      	beq.n	8000510 <cleanup_stdio+0x30>
 8000506:	4620      	mov	r0, r4
 8000508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800050c:	f000 bd8c 	b.w	8001028 <_fflush_r>
 8000510:	bd10      	pop	{r4, pc}
 8000512:	bf00      	nop
 8000514:	20000088 	.word	0x20000088
 8000518:	200000f0 	.word	0x200000f0
 800051c:	20000158 	.word	0x20000158

08000520 <global_stdio_init.part.0>:
 8000520:	b510      	push	{r4, lr}
 8000522:	4b0b      	ldr	r3, [pc, #44]	; (8000550 <global_stdio_init.part.0+0x30>)
 8000524:	4c0b      	ldr	r4, [pc, #44]	; (8000554 <global_stdio_init.part.0+0x34>)
 8000526:	4a0c      	ldr	r2, [pc, #48]	; (8000558 <global_stdio_init.part.0+0x38>)
 8000528:	601a      	str	r2, [r3, #0]
 800052a:	4620      	mov	r0, r4
 800052c:	2200      	movs	r2, #0
 800052e:	2104      	movs	r1, #4
 8000530:	f7ff ff94 	bl	800045c <std>
 8000534:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000538:	2201      	movs	r2, #1
 800053a:	2109      	movs	r1, #9
 800053c:	f7ff ff8e 	bl	800045c <std>
 8000540:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000544:	2202      	movs	r2, #2
 8000546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800054a:	2112      	movs	r1, #18
 800054c:	f7ff bf86 	b.w	800045c <std>
 8000550:	200001c0 	.word	0x200001c0
 8000554:	20000088 	.word	0x20000088
 8000558:	080004c9 	.word	0x080004c9

0800055c <__sfp_lock_acquire>:
 800055c:	4801      	ldr	r0, [pc, #4]	; (8000564 <__sfp_lock_acquire+0x8>)
 800055e:	f000 b90e 	b.w	800077e <__retarget_lock_acquire_recursive>
 8000562:	bf00      	nop
 8000564:	200001c9 	.word	0x200001c9

08000568 <__sfp_lock_release>:
 8000568:	4801      	ldr	r0, [pc, #4]	; (8000570 <__sfp_lock_release+0x8>)
 800056a:	f000 b909 	b.w	8000780 <__retarget_lock_release_recursive>
 800056e:	bf00      	nop
 8000570:	200001c9 	.word	0x200001c9

08000574 <__sinit>:
 8000574:	b510      	push	{r4, lr}
 8000576:	4604      	mov	r4, r0
 8000578:	f7ff fff0 	bl	800055c <__sfp_lock_acquire>
 800057c:	6a23      	ldr	r3, [r4, #32]
 800057e:	b11b      	cbz	r3, 8000588 <__sinit+0x14>
 8000580:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000584:	f7ff bff0 	b.w	8000568 <__sfp_lock_release>
 8000588:	4b04      	ldr	r3, [pc, #16]	; (800059c <__sinit+0x28>)
 800058a:	6223      	str	r3, [r4, #32]
 800058c:	4b04      	ldr	r3, [pc, #16]	; (80005a0 <__sinit+0x2c>)
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	2b00      	cmp	r3, #0
 8000592:	d1f5      	bne.n	8000580 <__sinit+0xc>
 8000594:	f7ff ffc4 	bl	8000520 <global_stdio_init.part.0>
 8000598:	e7f2      	b.n	8000580 <__sinit+0xc>
 800059a:	bf00      	nop
 800059c:	080004e1 	.word	0x080004e1
 80005a0:	200001c0 	.word	0x200001c0

080005a4 <_fwalk_sglue>:
 80005a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005a8:	4607      	mov	r7, r0
 80005aa:	4688      	mov	r8, r1
 80005ac:	4614      	mov	r4, r2
 80005ae:	2600      	movs	r6, #0
 80005b0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005b4:	f1b9 0901 	subs.w	r9, r9, #1
 80005b8:	d505      	bpl.n	80005c6 <_fwalk_sglue+0x22>
 80005ba:	6824      	ldr	r4, [r4, #0]
 80005bc:	2c00      	cmp	r4, #0
 80005be:	d1f7      	bne.n	80005b0 <_fwalk_sglue+0xc>
 80005c0:	4630      	mov	r0, r6
 80005c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005c6:	89ab      	ldrh	r3, [r5, #12]
 80005c8:	2b01      	cmp	r3, #1
 80005ca:	d907      	bls.n	80005dc <_fwalk_sglue+0x38>
 80005cc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005d0:	3301      	adds	r3, #1
 80005d2:	d003      	beq.n	80005dc <_fwalk_sglue+0x38>
 80005d4:	4629      	mov	r1, r5
 80005d6:	4638      	mov	r0, r7
 80005d8:	47c0      	blx	r8
 80005da:	4306      	orrs	r6, r0
 80005dc:	3568      	adds	r5, #104	; 0x68
 80005de:	e7e9      	b.n	80005b4 <_fwalk_sglue+0x10>

080005e0 <iprintf>:
 80005e0:	b40f      	push	{r0, r1, r2, r3}
 80005e2:	b507      	push	{r0, r1, r2, lr}
 80005e4:	4906      	ldr	r1, [pc, #24]	; (8000600 <iprintf+0x20>)
 80005e6:	ab04      	add	r3, sp, #16
 80005e8:	6808      	ldr	r0, [r1, #0]
 80005ea:	f853 2b04 	ldr.w	r2, [r3], #4
 80005ee:	6881      	ldr	r1, [r0, #8]
 80005f0:	9301      	str	r3, [sp, #4]
 80005f2:	f000 f9e9 	bl	80009c8 <_vfiprintf_r>
 80005f6:	b003      	add	sp, #12
 80005f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80005fc:	b004      	add	sp, #16
 80005fe:	4770      	bx	lr
 8000600:	20000060 	.word	0x20000060

08000604 <__sread>:
 8000604:	b510      	push	{r4, lr}
 8000606:	460c      	mov	r4, r1
 8000608:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800060c:	f000 f868 	bl	80006e0 <_read_r>
 8000610:	2800      	cmp	r0, #0
 8000612:	bfab      	itete	ge
 8000614:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000616:	89a3      	ldrhlt	r3, [r4, #12]
 8000618:	181b      	addge	r3, r3, r0
 800061a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800061e:	bfac      	ite	ge
 8000620:	6563      	strge	r3, [r4, #84]	; 0x54
 8000622:	81a3      	strhlt	r3, [r4, #12]
 8000624:	bd10      	pop	{r4, pc}

08000626 <__swrite>:
 8000626:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800062a:	461f      	mov	r7, r3
 800062c:	898b      	ldrh	r3, [r1, #12]
 800062e:	05db      	lsls	r3, r3, #23
 8000630:	4605      	mov	r5, r0
 8000632:	460c      	mov	r4, r1
 8000634:	4616      	mov	r6, r2
 8000636:	d505      	bpl.n	8000644 <__swrite+0x1e>
 8000638:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800063c:	2302      	movs	r3, #2
 800063e:	2200      	movs	r2, #0
 8000640:	f000 f83c 	bl	80006bc <_lseek_r>
 8000644:	89a3      	ldrh	r3, [r4, #12]
 8000646:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800064a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800064e:	81a3      	strh	r3, [r4, #12]
 8000650:	4632      	mov	r2, r6
 8000652:	463b      	mov	r3, r7
 8000654:	4628      	mov	r0, r5
 8000656:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800065a:	f000 b853 	b.w	8000704 <_write_r>

0800065e <__sseek>:
 800065e:	b510      	push	{r4, lr}
 8000660:	460c      	mov	r4, r1
 8000662:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000666:	f000 f829 	bl	80006bc <_lseek_r>
 800066a:	1c43      	adds	r3, r0, #1
 800066c:	89a3      	ldrh	r3, [r4, #12]
 800066e:	bf15      	itete	ne
 8000670:	6560      	strne	r0, [r4, #84]	; 0x54
 8000672:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000676:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800067a:	81a3      	strheq	r3, [r4, #12]
 800067c:	bf18      	it	ne
 800067e:	81a3      	strhne	r3, [r4, #12]
 8000680:	bd10      	pop	{r4, pc}

08000682 <__sclose>:
 8000682:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000686:	f000 b809 	b.w	800069c <_close_r>

0800068a <memset>:
 800068a:	4402      	add	r2, r0
 800068c:	4603      	mov	r3, r0
 800068e:	4293      	cmp	r3, r2
 8000690:	d100      	bne.n	8000694 <memset+0xa>
 8000692:	4770      	bx	lr
 8000694:	f803 1b01 	strb.w	r1, [r3], #1
 8000698:	e7f9      	b.n	800068e <memset+0x4>
	...

0800069c <_close_r>:
 800069c:	b538      	push	{r3, r4, r5, lr}
 800069e:	4d06      	ldr	r5, [pc, #24]	; (80006b8 <_close_r+0x1c>)
 80006a0:	2300      	movs	r3, #0
 80006a2:	4604      	mov	r4, r0
 80006a4:	4608      	mov	r0, r1
 80006a6:	602b      	str	r3, [r5, #0]
 80006a8:	f7ff fe43 	bl	8000332 <_close>
 80006ac:	1c43      	adds	r3, r0, #1
 80006ae:	d102      	bne.n	80006b6 <_close_r+0x1a>
 80006b0:	682b      	ldr	r3, [r5, #0]
 80006b2:	b103      	cbz	r3, 80006b6 <_close_r+0x1a>
 80006b4:	6023      	str	r3, [r4, #0]
 80006b6:	bd38      	pop	{r3, r4, r5, pc}
 80006b8:	200001c4 	.word	0x200001c4

080006bc <_lseek_r>:
 80006bc:	b538      	push	{r3, r4, r5, lr}
 80006be:	4d07      	ldr	r5, [pc, #28]	; (80006dc <_lseek_r+0x20>)
 80006c0:	4604      	mov	r4, r0
 80006c2:	4608      	mov	r0, r1
 80006c4:	4611      	mov	r1, r2
 80006c6:	2200      	movs	r2, #0
 80006c8:	602a      	str	r2, [r5, #0]
 80006ca:	461a      	mov	r2, r3
 80006cc:	f7ff fe58 	bl	8000380 <_lseek>
 80006d0:	1c43      	adds	r3, r0, #1
 80006d2:	d102      	bne.n	80006da <_lseek_r+0x1e>
 80006d4:	682b      	ldr	r3, [r5, #0]
 80006d6:	b103      	cbz	r3, 80006da <_lseek_r+0x1e>
 80006d8:	6023      	str	r3, [r4, #0]
 80006da:	bd38      	pop	{r3, r4, r5, pc}
 80006dc:	200001c4 	.word	0x200001c4

080006e0 <_read_r>:
 80006e0:	b538      	push	{r3, r4, r5, lr}
 80006e2:	4d07      	ldr	r5, [pc, #28]	; (8000700 <_read_r+0x20>)
 80006e4:	4604      	mov	r4, r0
 80006e6:	4608      	mov	r0, r1
 80006e8:	4611      	mov	r1, r2
 80006ea:	2200      	movs	r2, #0
 80006ec:	602a      	str	r2, [r5, #0]
 80006ee:	461a      	mov	r2, r3
 80006f0:	f7ff fde6 	bl	80002c0 <_read>
 80006f4:	1c43      	adds	r3, r0, #1
 80006f6:	d102      	bne.n	80006fe <_read_r+0x1e>
 80006f8:	682b      	ldr	r3, [r5, #0]
 80006fa:	b103      	cbz	r3, 80006fe <_read_r+0x1e>
 80006fc:	6023      	str	r3, [r4, #0]
 80006fe:	bd38      	pop	{r3, r4, r5, pc}
 8000700:	200001c4 	.word	0x200001c4

08000704 <_write_r>:
 8000704:	b538      	push	{r3, r4, r5, lr}
 8000706:	4d07      	ldr	r5, [pc, #28]	; (8000724 <_write_r+0x20>)
 8000708:	4604      	mov	r4, r0
 800070a:	4608      	mov	r0, r1
 800070c:	4611      	mov	r1, r2
 800070e:	2200      	movs	r2, #0
 8000710:	602a      	str	r2, [r5, #0]
 8000712:	461a      	mov	r2, r3
 8000714:	f7ff fdf1 	bl	80002fa <_write>
 8000718:	1c43      	adds	r3, r0, #1
 800071a:	d102      	bne.n	8000722 <_write_r+0x1e>
 800071c:	682b      	ldr	r3, [r5, #0]
 800071e:	b103      	cbz	r3, 8000722 <_write_r+0x1e>
 8000720:	6023      	str	r3, [r4, #0]
 8000722:	bd38      	pop	{r3, r4, r5, pc}
 8000724:	200001c4 	.word	0x200001c4

08000728 <__errno>:
 8000728:	4b01      	ldr	r3, [pc, #4]	; (8000730 <__errno+0x8>)
 800072a:	6818      	ldr	r0, [r3, #0]
 800072c:	4770      	bx	lr
 800072e:	bf00      	nop
 8000730:	20000060 	.word	0x20000060

08000734 <__libc_init_array>:
 8000734:	b570      	push	{r4, r5, r6, lr}
 8000736:	4d0d      	ldr	r5, [pc, #52]	; (800076c <__libc_init_array+0x38>)
 8000738:	4c0d      	ldr	r4, [pc, #52]	; (8000770 <__libc_init_array+0x3c>)
 800073a:	1b64      	subs	r4, r4, r5
 800073c:	10a4      	asrs	r4, r4, #2
 800073e:	2600      	movs	r6, #0
 8000740:	42a6      	cmp	r6, r4
 8000742:	d109      	bne.n	8000758 <__libc_init_array+0x24>
 8000744:	4d0b      	ldr	r5, [pc, #44]	; (8000774 <__libc_init_array+0x40>)
 8000746:	4c0c      	ldr	r4, [pc, #48]	; (8000778 <__libc_init_array+0x44>)
 8000748:	f000 fdc0 	bl	80012cc <_init>
 800074c:	1b64      	subs	r4, r4, r5
 800074e:	10a4      	asrs	r4, r4, #2
 8000750:	2600      	movs	r6, #0
 8000752:	42a6      	cmp	r6, r4
 8000754:	d105      	bne.n	8000762 <__libc_init_array+0x2e>
 8000756:	bd70      	pop	{r4, r5, r6, pc}
 8000758:	f855 3b04 	ldr.w	r3, [r5], #4
 800075c:	4798      	blx	r3
 800075e:	3601      	adds	r6, #1
 8000760:	e7ee      	b.n	8000740 <__libc_init_array+0xc>
 8000762:	f855 3b04 	ldr.w	r3, [r5], #4
 8000766:	4798      	blx	r3
 8000768:	3601      	adds	r6, #1
 800076a:	e7f2      	b.n	8000752 <__libc_init_array+0x1e>
 800076c:	08001324 	.word	0x08001324
 8000770:	08001324 	.word	0x08001324
 8000774:	08001324 	.word	0x08001324
 8000778:	08001328 	.word	0x08001328

0800077c <__retarget_lock_init_recursive>:
 800077c:	4770      	bx	lr

0800077e <__retarget_lock_acquire_recursive>:
 800077e:	4770      	bx	lr

08000780 <__retarget_lock_release_recursive>:
 8000780:	4770      	bx	lr
	...

08000784 <_free_r>:
 8000784:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000786:	2900      	cmp	r1, #0
 8000788:	d044      	beq.n	8000814 <_free_r+0x90>
 800078a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800078e:	9001      	str	r0, [sp, #4]
 8000790:	2b00      	cmp	r3, #0
 8000792:	f1a1 0404 	sub.w	r4, r1, #4
 8000796:	bfb8      	it	lt
 8000798:	18e4      	addlt	r4, r4, r3
 800079a:	f000 f8df 	bl	800095c <__malloc_lock>
 800079e:	4a1e      	ldr	r2, [pc, #120]	; (8000818 <_free_r+0x94>)
 80007a0:	9801      	ldr	r0, [sp, #4]
 80007a2:	6813      	ldr	r3, [r2, #0]
 80007a4:	b933      	cbnz	r3, 80007b4 <_free_r+0x30>
 80007a6:	6063      	str	r3, [r4, #4]
 80007a8:	6014      	str	r4, [r2, #0]
 80007aa:	b003      	add	sp, #12
 80007ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80007b0:	f000 b8da 	b.w	8000968 <__malloc_unlock>
 80007b4:	42a3      	cmp	r3, r4
 80007b6:	d908      	bls.n	80007ca <_free_r+0x46>
 80007b8:	6825      	ldr	r5, [r4, #0]
 80007ba:	1961      	adds	r1, r4, r5
 80007bc:	428b      	cmp	r3, r1
 80007be:	bf01      	itttt	eq
 80007c0:	6819      	ldreq	r1, [r3, #0]
 80007c2:	685b      	ldreq	r3, [r3, #4]
 80007c4:	1949      	addeq	r1, r1, r5
 80007c6:	6021      	streq	r1, [r4, #0]
 80007c8:	e7ed      	b.n	80007a6 <_free_r+0x22>
 80007ca:	461a      	mov	r2, r3
 80007cc:	685b      	ldr	r3, [r3, #4]
 80007ce:	b10b      	cbz	r3, 80007d4 <_free_r+0x50>
 80007d0:	42a3      	cmp	r3, r4
 80007d2:	d9fa      	bls.n	80007ca <_free_r+0x46>
 80007d4:	6811      	ldr	r1, [r2, #0]
 80007d6:	1855      	adds	r5, r2, r1
 80007d8:	42a5      	cmp	r5, r4
 80007da:	d10b      	bne.n	80007f4 <_free_r+0x70>
 80007dc:	6824      	ldr	r4, [r4, #0]
 80007de:	4421      	add	r1, r4
 80007e0:	1854      	adds	r4, r2, r1
 80007e2:	42a3      	cmp	r3, r4
 80007e4:	6011      	str	r1, [r2, #0]
 80007e6:	d1e0      	bne.n	80007aa <_free_r+0x26>
 80007e8:	681c      	ldr	r4, [r3, #0]
 80007ea:	685b      	ldr	r3, [r3, #4]
 80007ec:	6053      	str	r3, [r2, #4]
 80007ee:	440c      	add	r4, r1
 80007f0:	6014      	str	r4, [r2, #0]
 80007f2:	e7da      	b.n	80007aa <_free_r+0x26>
 80007f4:	d902      	bls.n	80007fc <_free_r+0x78>
 80007f6:	230c      	movs	r3, #12
 80007f8:	6003      	str	r3, [r0, #0]
 80007fa:	e7d6      	b.n	80007aa <_free_r+0x26>
 80007fc:	6825      	ldr	r5, [r4, #0]
 80007fe:	1961      	adds	r1, r4, r5
 8000800:	428b      	cmp	r3, r1
 8000802:	bf04      	itt	eq
 8000804:	6819      	ldreq	r1, [r3, #0]
 8000806:	685b      	ldreq	r3, [r3, #4]
 8000808:	6063      	str	r3, [r4, #4]
 800080a:	bf04      	itt	eq
 800080c:	1949      	addeq	r1, r1, r5
 800080e:	6021      	streq	r1, [r4, #0]
 8000810:	6054      	str	r4, [r2, #4]
 8000812:	e7ca      	b.n	80007aa <_free_r+0x26>
 8000814:	b003      	add	sp, #12
 8000816:	bd30      	pop	{r4, r5, pc}
 8000818:	200001cc 	.word	0x200001cc

0800081c <sbrk_aligned>:
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	4e0e      	ldr	r6, [pc, #56]	; (8000858 <sbrk_aligned+0x3c>)
 8000820:	460c      	mov	r4, r1
 8000822:	6831      	ldr	r1, [r6, #0]
 8000824:	4605      	mov	r5, r0
 8000826:	b911      	cbnz	r1, 800082e <sbrk_aligned+0x12>
 8000828:	f000 fcbc 	bl	80011a4 <_sbrk_r>
 800082c:	6030      	str	r0, [r6, #0]
 800082e:	4621      	mov	r1, r4
 8000830:	4628      	mov	r0, r5
 8000832:	f000 fcb7 	bl	80011a4 <_sbrk_r>
 8000836:	1c43      	adds	r3, r0, #1
 8000838:	d00a      	beq.n	8000850 <sbrk_aligned+0x34>
 800083a:	1cc4      	adds	r4, r0, #3
 800083c:	f024 0403 	bic.w	r4, r4, #3
 8000840:	42a0      	cmp	r0, r4
 8000842:	d007      	beq.n	8000854 <sbrk_aligned+0x38>
 8000844:	1a21      	subs	r1, r4, r0
 8000846:	4628      	mov	r0, r5
 8000848:	f000 fcac 	bl	80011a4 <_sbrk_r>
 800084c:	3001      	adds	r0, #1
 800084e:	d101      	bne.n	8000854 <sbrk_aligned+0x38>
 8000850:	f04f 34ff 	mov.w	r4, #4294967295
 8000854:	4620      	mov	r0, r4
 8000856:	bd70      	pop	{r4, r5, r6, pc}
 8000858:	200001d0 	.word	0x200001d0

0800085c <_malloc_r>:
 800085c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000860:	1ccd      	adds	r5, r1, #3
 8000862:	f025 0503 	bic.w	r5, r5, #3
 8000866:	3508      	adds	r5, #8
 8000868:	2d0c      	cmp	r5, #12
 800086a:	bf38      	it	cc
 800086c:	250c      	movcc	r5, #12
 800086e:	2d00      	cmp	r5, #0
 8000870:	4607      	mov	r7, r0
 8000872:	db01      	blt.n	8000878 <_malloc_r+0x1c>
 8000874:	42a9      	cmp	r1, r5
 8000876:	d905      	bls.n	8000884 <_malloc_r+0x28>
 8000878:	230c      	movs	r3, #12
 800087a:	603b      	str	r3, [r7, #0]
 800087c:	2600      	movs	r6, #0
 800087e:	4630      	mov	r0, r6
 8000880:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000884:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000958 <_malloc_r+0xfc>
 8000888:	f000 f868 	bl	800095c <__malloc_lock>
 800088c:	f8d8 3000 	ldr.w	r3, [r8]
 8000890:	461c      	mov	r4, r3
 8000892:	bb5c      	cbnz	r4, 80008ec <_malloc_r+0x90>
 8000894:	4629      	mov	r1, r5
 8000896:	4638      	mov	r0, r7
 8000898:	f7ff ffc0 	bl	800081c <sbrk_aligned>
 800089c:	1c43      	adds	r3, r0, #1
 800089e:	4604      	mov	r4, r0
 80008a0:	d155      	bne.n	800094e <_malloc_r+0xf2>
 80008a2:	f8d8 4000 	ldr.w	r4, [r8]
 80008a6:	4626      	mov	r6, r4
 80008a8:	2e00      	cmp	r6, #0
 80008aa:	d145      	bne.n	8000938 <_malloc_r+0xdc>
 80008ac:	2c00      	cmp	r4, #0
 80008ae:	d048      	beq.n	8000942 <_malloc_r+0xe6>
 80008b0:	6823      	ldr	r3, [r4, #0]
 80008b2:	4631      	mov	r1, r6
 80008b4:	4638      	mov	r0, r7
 80008b6:	eb04 0903 	add.w	r9, r4, r3
 80008ba:	f000 fc73 	bl	80011a4 <_sbrk_r>
 80008be:	4581      	cmp	r9, r0
 80008c0:	d13f      	bne.n	8000942 <_malloc_r+0xe6>
 80008c2:	6821      	ldr	r1, [r4, #0]
 80008c4:	1a6d      	subs	r5, r5, r1
 80008c6:	4629      	mov	r1, r5
 80008c8:	4638      	mov	r0, r7
 80008ca:	f7ff ffa7 	bl	800081c <sbrk_aligned>
 80008ce:	3001      	adds	r0, #1
 80008d0:	d037      	beq.n	8000942 <_malloc_r+0xe6>
 80008d2:	6823      	ldr	r3, [r4, #0]
 80008d4:	442b      	add	r3, r5
 80008d6:	6023      	str	r3, [r4, #0]
 80008d8:	f8d8 3000 	ldr.w	r3, [r8]
 80008dc:	2b00      	cmp	r3, #0
 80008de:	d038      	beq.n	8000952 <_malloc_r+0xf6>
 80008e0:	685a      	ldr	r2, [r3, #4]
 80008e2:	42a2      	cmp	r2, r4
 80008e4:	d12b      	bne.n	800093e <_malloc_r+0xe2>
 80008e6:	2200      	movs	r2, #0
 80008e8:	605a      	str	r2, [r3, #4]
 80008ea:	e00f      	b.n	800090c <_malloc_r+0xb0>
 80008ec:	6822      	ldr	r2, [r4, #0]
 80008ee:	1b52      	subs	r2, r2, r5
 80008f0:	d41f      	bmi.n	8000932 <_malloc_r+0xd6>
 80008f2:	2a0b      	cmp	r2, #11
 80008f4:	d917      	bls.n	8000926 <_malloc_r+0xca>
 80008f6:	1961      	adds	r1, r4, r5
 80008f8:	42a3      	cmp	r3, r4
 80008fa:	6025      	str	r5, [r4, #0]
 80008fc:	bf18      	it	ne
 80008fe:	6059      	strne	r1, [r3, #4]
 8000900:	6863      	ldr	r3, [r4, #4]
 8000902:	bf08      	it	eq
 8000904:	f8c8 1000 	streq.w	r1, [r8]
 8000908:	5162      	str	r2, [r4, r5]
 800090a:	604b      	str	r3, [r1, #4]
 800090c:	4638      	mov	r0, r7
 800090e:	f104 060b 	add.w	r6, r4, #11
 8000912:	f000 f829 	bl	8000968 <__malloc_unlock>
 8000916:	f026 0607 	bic.w	r6, r6, #7
 800091a:	1d23      	adds	r3, r4, #4
 800091c:	1af2      	subs	r2, r6, r3
 800091e:	d0ae      	beq.n	800087e <_malloc_r+0x22>
 8000920:	1b9b      	subs	r3, r3, r6
 8000922:	50a3      	str	r3, [r4, r2]
 8000924:	e7ab      	b.n	800087e <_malloc_r+0x22>
 8000926:	42a3      	cmp	r3, r4
 8000928:	6862      	ldr	r2, [r4, #4]
 800092a:	d1dd      	bne.n	80008e8 <_malloc_r+0x8c>
 800092c:	f8c8 2000 	str.w	r2, [r8]
 8000930:	e7ec      	b.n	800090c <_malloc_r+0xb0>
 8000932:	4623      	mov	r3, r4
 8000934:	6864      	ldr	r4, [r4, #4]
 8000936:	e7ac      	b.n	8000892 <_malloc_r+0x36>
 8000938:	4634      	mov	r4, r6
 800093a:	6876      	ldr	r6, [r6, #4]
 800093c:	e7b4      	b.n	80008a8 <_malloc_r+0x4c>
 800093e:	4613      	mov	r3, r2
 8000940:	e7cc      	b.n	80008dc <_malloc_r+0x80>
 8000942:	230c      	movs	r3, #12
 8000944:	603b      	str	r3, [r7, #0]
 8000946:	4638      	mov	r0, r7
 8000948:	f000 f80e 	bl	8000968 <__malloc_unlock>
 800094c:	e797      	b.n	800087e <_malloc_r+0x22>
 800094e:	6025      	str	r5, [r4, #0]
 8000950:	e7dc      	b.n	800090c <_malloc_r+0xb0>
 8000952:	605b      	str	r3, [r3, #4]
 8000954:	deff      	udf	#255	; 0xff
 8000956:	bf00      	nop
 8000958:	200001cc 	.word	0x200001cc

0800095c <__malloc_lock>:
 800095c:	4801      	ldr	r0, [pc, #4]	; (8000964 <__malloc_lock+0x8>)
 800095e:	f7ff bf0e 	b.w	800077e <__retarget_lock_acquire_recursive>
 8000962:	bf00      	nop
 8000964:	200001c8 	.word	0x200001c8

08000968 <__malloc_unlock>:
 8000968:	4801      	ldr	r0, [pc, #4]	; (8000970 <__malloc_unlock+0x8>)
 800096a:	f7ff bf09 	b.w	8000780 <__retarget_lock_release_recursive>
 800096e:	bf00      	nop
 8000970:	200001c8 	.word	0x200001c8

08000974 <__sfputc_r>:
 8000974:	6893      	ldr	r3, [r2, #8]
 8000976:	3b01      	subs	r3, #1
 8000978:	2b00      	cmp	r3, #0
 800097a:	b410      	push	{r4}
 800097c:	6093      	str	r3, [r2, #8]
 800097e:	da08      	bge.n	8000992 <__sfputc_r+0x1e>
 8000980:	6994      	ldr	r4, [r2, #24]
 8000982:	42a3      	cmp	r3, r4
 8000984:	db01      	blt.n	800098a <__sfputc_r+0x16>
 8000986:	290a      	cmp	r1, #10
 8000988:	d103      	bne.n	8000992 <__sfputc_r+0x1e>
 800098a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800098e:	f000 bb73 	b.w	8001078 <__swbuf_r>
 8000992:	6813      	ldr	r3, [r2, #0]
 8000994:	1c58      	adds	r0, r3, #1
 8000996:	6010      	str	r0, [r2, #0]
 8000998:	7019      	strb	r1, [r3, #0]
 800099a:	4608      	mov	r0, r1
 800099c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009a0:	4770      	bx	lr

080009a2 <__sfputs_r>:
 80009a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009a4:	4606      	mov	r6, r0
 80009a6:	460f      	mov	r7, r1
 80009a8:	4614      	mov	r4, r2
 80009aa:	18d5      	adds	r5, r2, r3
 80009ac:	42ac      	cmp	r4, r5
 80009ae:	d101      	bne.n	80009b4 <__sfputs_r+0x12>
 80009b0:	2000      	movs	r0, #0
 80009b2:	e007      	b.n	80009c4 <__sfputs_r+0x22>
 80009b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009b8:	463a      	mov	r2, r7
 80009ba:	4630      	mov	r0, r6
 80009bc:	f7ff ffda 	bl	8000974 <__sfputc_r>
 80009c0:	1c43      	adds	r3, r0, #1
 80009c2:	d1f3      	bne.n	80009ac <__sfputs_r+0xa>
 80009c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009c8 <_vfiprintf_r>:
 80009c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009cc:	460d      	mov	r5, r1
 80009ce:	b09d      	sub	sp, #116	; 0x74
 80009d0:	4614      	mov	r4, r2
 80009d2:	4698      	mov	r8, r3
 80009d4:	4606      	mov	r6, r0
 80009d6:	b118      	cbz	r0, 80009e0 <_vfiprintf_r+0x18>
 80009d8:	6a03      	ldr	r3, [r0, #32]
 80009da:	b90b      	cbnz	r3, 80009e0 <_vfiprintf_r+0x18>
 80009dc:	f7ff fdca 	bl	8000574 <__sinit>
 80009e0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009e2:	07d9      	lsls	r1, r3, #31
 80009e4:	d405      	bmi.n	80009f2 <_vfiprintf_r+0x2a>
 80009e6:	89ab      	ldrh	r3, [r5, #12]
 80009e8:	059a      	lsls	r2, r3, #22
 80009ea:	d402      	bmi.n	80009f2 <_vfiprintf_r+0x2a>
 80009ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009ee:	f7ff fec6 	bl	800077e <__retarget_lock_acquire_recursive>
 80009f2:	89ab      	ldrh	r3, [r5, #12]
 80009f4:	071b      	lsls	r3, r3, #28
 80009f6:	d501      	bpl.n	80009fc <_vfiprintf_r+0x34>
 80009f8:	692b      	ldr	r3, [r5, #16]
 80009fa:	b99b      	cbnz	r3, 8000a24 <_vfiprintf_r+0x5c>
 80009fc:	4629      	mov	r1, r5
 80009fe:	4630      	mov	r0, r6
 8000a00:	f000 fb78 	bl	80010f4 <__swsetup_r>
 8000a04:	b170      	cbz	r0, 8000a24 <_vfiprintf_r+0x5c>
 8000a06:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a08:	07dc      	lsls	r4, r3, #31
 8000a0a:	d504      	bpl.n	8000a16 <_vfiprintf_r+0x4e>
 8000a0c:	f04f 30ff 	mov.w	r0, #4294967295
 8000a10:	b01d      	add	sp, #116	; 0x74
 8000a12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a16:	89ab      	ldrh	r3, [r5, #12]
 8000a18:	0598      	lsls	r0, r3, #22
 8000a1a:	d4f7      	bmi.n	8000a0c <_vfiprintf_r+0x44>
 8000a1c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a1e:	f7ff feaf 	bl	8000780 <__retarget_lock_release_recursive>
 8000a22:	e7f3      	b.n	8000a0c <_vfiprintf_r+0x44>
 8000a24:	2300      	movs	r3, #0
 8000a26:	9309      	str	r3, [sp, #36]	; 0x24
 8000a28:	2320      	movs	r3, #32
 8000a2a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a2e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a32:	2330      	movs	r3, #48	; 0x30
 8000a34:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000be8 <_vfiprintf_r+0x220>
 8000a38:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a3c:	f04f 0901 	mov.w	r9, #1
 8000a40:	4623      	mov	r3, r4
 8000a42:	469a      	mov	sl, r3
 8000a44:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a48:	b10a      	cbz	r2, 8000a4e <_vfiprintf_r+0x86>
 8000a4a:	2a25      	cmp	r2, #37	; 0x25
 8000a4c:	d1f9      	bne.n	8000a42 <_vfiprintf_r+0x7a>
 8000a4e:	ebba 0b04 	subs.w	fp, sl, r4
 8000a52:	d00b      	beq.n	8000a6c <_vfiprintf_r+0xa4>
 8000a54:	465b      	mov	r3, fp
 8000a56:	4622      	mov	r2, r4
 8000a58:	4629      	mov	r1, r5
 8000a5a:	4630      	mov	r0, r6
 8000a5c:	f7ff ffa1 	bl	80009a2 <__sfputs_r>
 8000a60:	3001      	adds	r0, #1
 8000a62:	f000 80a9 	beq.w	8000bb8 <_vfiprintf_r+0x1f0>
 8000a66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a68:	445a      	add	r2, fp
 8000a6a:	9209      	str	r2, [sp, #36]	; 0x24
 8000a6c:	f89a 3000 	ldrb.w	r3, [sl]
 8000a70:	2b00      	cmp	r3, #0
 8000a72:	f000 80a1 	beq.w	8000bb8 <_vfiprintf_r+0x1f0>
 8000a76:	2300      	movs	r3, #0
 8000a78:	f04f 32ff 	mov.w	r2, #4294967295
 8000a7c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a80:	f10a 0a01 	add.w	sl, sl, #1
 8000a84:	9304      	str	r3, [sp, #16]
 8000a86:	9307      	str	r3, [sp, #28]
 8000a88:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a8c:	931a      	str	r3, [sp, #104]	; 0x68
 8000a8e:	4654      	mov	r4, sl
 8000a90:	2205      	movs	r2, #5
 8000a92:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a96:	4854      	ldr	r0, [pc, #336]	; (8000be8 <_vfiprintf_r+0x220>)
 8000a98:	f7ff fbaa 	bl	80001f0 <memchr>
 8000a9c:	9a04      	ldr	r2, [sp, #16]
 8000a9e:	b9d8      	cbnz	r0, 8000ad8 <_vfiprintf_r+0x110>
 8000aa0:	06d1      	lsls	r1, r2, #27
 8000aa2:	bf44      	itt	mi
 8000aa4:	2320      	movmi	r3, #32
 8000aa6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000aaa:	0713      	lsls	r3, r2, #28
 8000aac:	bf44      	itt	mi
 8000aae:	232b      	movmi	r3, #43	; 0x2b
 8000ab0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ab4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ab8:	2b2a      	cmp	r3, #42	; 0x2a
 8000aba:	d015      	beq.n	8000ae8 <_vfiprintf_r+0x120>
 8000abc:	9a07      	ldr	r2, [sp, #28]
 8000abe:	4654      	mov	r4, sl
 8000ac0:	2000      	movs	r0, #0
 8000ac2:	f04f 0c0a 	mov.w	ip, #10
 8000ac6:	4621      	mov	r1, r4
 8000ac8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000acc:	3b30      	subs	r3, #48	; 0x30
 8000ace:	2b09      	cmp	r3, #9
 8000ad0:	d94d      	bls.n	8000b6e <_vfiprintf_r+0x1a6>
 8000ad2:	b1b0      	cbz	r0, 8000b02 <_vfiprintf_r+0x13a>
 8000ad4:	9207      	str	r2, [sp, #28]
 8000ad6:	e014      	b.n	8000b02 <_vfiprintf_r+0x13a>
 8000ad8:	eba0 0308 	sub.w	r3, r0, r8
 8000adc:	fa09 f303 	lsl.w	r3, r9, r3
 8000ae0:	4313      	orrs	r3, r2
 8000ae2:	9304      	str	r3, [sp, #16]
 8000ae4:	46a2      	mov	sl, r4
 8000ae6:	e7d2      	b.n	8000a8e <_vfiprintf_r+0xc6>
 8000ae8:	9b03      	ldr	r3, [sp, #12]
 8000aea:	1d19      	adds	r1, r3, #4
 8000aec:	681b      	ldr	r3, [r3, #0]
 8000aee:	9103      	str	r1, [sp, #12]
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	bfbb      	ittet	lt
 8000af4:	425b      	neglt	r3, r3
 8000af6:	f042 0202 	orrlt.w	r2, r2, #2
 8000afa:	9307      	strge	r3, [sp, #28]
 8000afc:	9307      	strlt	r3, [sp, #28]
 8000afe:	bfb8      	it	lt
 8000b00:	9204      	strlt	r2, [sp, #16]
 8000b02:	7823      	ldrb	r3, [r4, #0]
 8000b04:	2b2e      	cmp	r3, #46	; 0x2e
 8000b06:	d10c      	bne.n	8000b22 <_vfiprintf_r+0x15a>
 8000b08:	7863      	ldrb	r3, [r4, #1]
 8000b0a:	2b2a      	cmp	r3, #42	; 0x2a
 8000b0c:	d134      	bne.n	8000b78 <_vfiprintf_r+0x1b0>
 8000b0e:	9b03      	ldr	r3, [sp, #12]
 8000b10:	1d1a      	adds	r2, r3, #4
 8000b12:	681b      	ldr	r3, [r3, #0]
 8000b14:	9203      	str	r2, [sp, #12]
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	bfb8      	it	lt
 8000b1a:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b1e:	3402      	adds	r4, #2
 8000b20:	9305      	str	r3, [sp, #20]
 8000b22:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000bf8 <_vfiprintf_r+0x230>
 8000b26:	7821      	ldrb	r1, [r4, #0]
 8000b28:	2203      	movs	r2, #3
 8000b2a:	4650      	mov	r0, sl
 8000b2c:	f7ff fb60 	bl	80001f0 <memchr>
 8000b30:	b138      	cbz	r0, 8000b42 <_vfiprintf_r+0x17a>
 8000b32:	9b04      	ldr	r3, [sp, #16]
 8000b34:	eba0 000a 	sub.w	r0, r0, sl
 8000b38:	2240      	movs	r2, #64	; 0x40
 8000b3a:	4082      	lsls	r2, r0
 8000b3c:	4313      	orrs	r3, r2
 8000b3e:	3401      	adds	r4, #1
 8000b40:	9304      	str	r3, [sp, #16]
 8000b42:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b46:	4829      	ldr	r0, [pc, #164]	; (8000bec <_vfiprintf_r+0x224>)
 8000b48:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b4c:	2206      	movs	r2, #6
 8000b4e:	f7ff fb4f 	bl	80001f0 <memchr>
 8000b52:	2800      	cmp	r0, #0
 8000b54:	d03f      	beq.n	8000bd6 <_vfiprintf_r+0x20e>
 8000b56:	4b26      	ldr	r3, [pc, #152]	; (8000bf0 <_vfiprintf_r+0x228>)
 8000b58:	bb1b      	cbnz	r3, 8000ba2 <_vfiprintf_r+0x1da>
 8000b5a:	9b03      	ldr	r3, [sp, #12]
 8000b5c:	3307      	adds	r3, #7
 8000b5e:	f023 0307 	bic.w	r3, r3, #7
 8000b62:	3308      	adds	r3, #8
 8000b64:	9303      	str	r3, [sp, #12]
 8000b66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b68:	443b      	add	r3, r7
 8000b6a:	9309      	str	r3, [sp, #36]	; 0x24
 8000b6c:	e768      	b.n	8000a40 <_vfiprintf_r+0x78>
 8000b6e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b72:	460c      	mov	r4, r1
 8000b74:	2001      	movs	r0, #1
 8000b76:	e7a6      	b.n	8000ac6 <_vfiprintf_r+0xfe>
 8000b78:	2300      	movs	r3, #0
 8000b7a:	3401      	adds	r4, #1
 8000b7c:	9305      	str	r3, [sp, #20]
 8000b7e:	4619      	mov	r1, r3
 8000b80:	f04f 0c0a 	mov.w	ip, #10
 8000b84:	4620      	mov	r0, r4
 8000b86:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b8a:	3a30      	subs	r2, #48	; 0x30
 8000b8c:	2a09      	cmp	r2, #9
 8000b8e:	d903      	bls.n	8000b98 <_vfiprintf_r+0x1d0>
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d0c6      	beq.n	8000b22 <_vfiprintf_r+0x15a>
 8000b94:	9105      	str	r1, [sp, #20]
 8000b96:	e7c4      	b.n	8000b22 <_vfiprintf_r+0x15a>
 8000b98:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b9c:	4604      	mov	r4, r0
 8000b9e:	2301      	movs	r3, #1
 8000ba0:	e7f0      	b.n	8000b84 <_vfiprintf_r+0x1bc>
 8000ba2:	ab03      	add	r3, sp, #12
 8000ba4:	9300      	str	r3, [sp, #0]
 8000ba6:	462a      	mov	r2, r5
 8000ba8:	4b12      	ldr	r3, [pc, #72]	; (8000bf4 <_vfiprintf_r+0x22c>)
 8000baa:	a904      	add	r1, sp, #16
 8000bac:	4630      	mov	r0, r6
 8000bae:	f3af 8000 	nop.w
 8000bb2:	4607      	mov	r7, r0
 8000bb4:	1c78      	adds	r0, r7, #1
 8000bb6:	d1d6      	bne.n	8000b66 <_vfiprintf_r+0x19e>
 8000bb8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000bba:	07d9      	lsls	r1, r3, #31
 8000bbc:	d405      	bmi.n	8000bca <_vfiprintf_r+0x202>
 8000bbe:	89ab      	ldrh	r3, [r5, #12]
 8000bc0:	059a      	lsls	r2, r3, #22
 8000bc2:	d402      	bmi.n	8000bca <_vfiprintf_r+0x202>
 8000bc4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000bc6:	f7ff fddb 	bl	8000780 <__retarget_lock_release_recursive>
 8000bca:	89ab      	ldrh	r3, [r5, #12]
 8000bcc:	065b      	lsls	r3, r3, #25
 8000bce:	f53f af1d 	bmi.w	8000a0c <_vfiprintf_r+0x44>
 8000bd2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bd4:	e71c      	b.n	8000a10 <_vfiprintf_r+0x48>
 8000bd6:	ab03      	add	r3, sp, #12
 8000bd8:	9300      	str	r3, [sp, #0]
 8000bda:	462a      	mov	r2, r5
 8000bdc:	4b05      	ldr	r3, [pc, #20]	; (8000bf4 <_vfiprintf_r+0x22c>)
 8000bde:	a904      	add	r1, sp, #16
 8000be0:	4630      	mov	r0, r6
 8000be2:	f000 f879 	bl	8000cd8 <_printf_i>
 8000be6:	e7e4      	b.n	8000bb2 <_vfiprintf_r+0x1ea>
 8000be8:	080012f1 	.word	0x080012f1
 8000bec:	080012fb 	.word	0x080012fb
 8000bf0:	00000000 	.word	0x00000000
 8000bf4:	080009a3 	.word	0x080009a3
 8000bf8:	080012f7 	.word	0x080012f7

08000bfc <_printf_common>:
 8000bfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c00:	4616      	mov	r6, r2
 8000c02:	4699      	mov	r9, r3
 8000c04:	688a      	ldr	r2, [r1, #8]
 8000c06:	690b      	ldr	r3, [r1, #16]
 8000c08:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c0c:	4293      	cmp	r3, r2
 8000c0e:	bfb8      	it	lt
 8000c10:	4613      	movlt	r3, r2
 8000c12:	6033      	str	r3, [r6, #0]
 8000c14:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c18:	4607      	mov	r7, r0
 8000c1a:	460c      	mov	r4, r1
 8000c1c:	b10a      	cbz	r2, 8000c22 <_printf_common+0x26>
 8000c1e:	3301      	adds	r3, #1
 8000c20:	6033      	str	r3, [r6, #0]
 8000c22:	6823      	ldr	r3, [r4, #0]
 8000c24:	0699      	lsls	r1, r3, #26
 8000c26:	bf42      	ittt	mi
 8000c28:	6833      	ldrmi	r3, [r6, #0]
 8000c2a:	3302      	addmi	r3, #2
 8000c2c:	6033      	strmi	r3, [r6, #0]
 8000c2e:	6825      	ldr	r5, [r4, #0]
 8000c30:	f015 0506 	ands.w	r5, r5, #6
 8000c34:	d106      	bne.n	8000c44 <_printf_common+0x48>
 8000c36:	f104 0a19 	add.w	sl, r4, #25
 8000c3a:	68e3      	ldr	r3, [r4, #12]
 8000c3c:	6832      	ldr	r2, [r6, #0]
 8000c3e:	1a9b      	subs	r3, r3, r2
 8000c40:	42ab      	cmp	r3, r5
 8000c42:	dc26      	bgt.n	8000c92 <_printf_common+0x96>
 8000c44:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c48:	1e13      	subs	r3, r2, #0
 8000c4a:	6822      	ldr	r2, [r4, #0]
 8000c4c:	bf18      	it	ne
 8000c4e:	2301      	movne	r3, #1
 8000c50:	0692      	lsls	r2, r2, #26
 8000c52:	d42b      	bmi.n	8000cac <_printf_common+0xb0>
 8000c54:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c58:	4649      	mov	r1, r9
 8000c5a:	4638      	mov	r0, r7
 8000c5c:	47c0      	blx	r8
 8000c5e:	3001      	adds	r0, #1
 8000c60:	d01e      	beq.n	8000ca0 <_printf_common+0xa4>
 8000c62:	6823      	ldr	r3, [r4, #0]
 8000c64:	6922      	ldr	r2, [r4, #16]
 8000c66:	f003 0306 	and.w	r3, r3, #6
 8000c6a:	2b04      	cmp	r3, #4
 8000c6c:	bf02      	ittt	eq
 8000c6e:	68e5      	ldreq	r5, [r4, #12]
 8000c70:	6833      	ldreq	r3, [r6, #0]
 8000c72:	1aed      	subeq	r5, r5, r3
 8000c74:	68a3      	ldr	r3, [r4, #8]
 8000c76:	bf0c      	ite	eq
 8000c78:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c7c:	2500      	movne	r5, #0
 8000c7e:	4293      	cmp	r3, r2
 8000c80:	bfc4      	itt	gt
 8000c82:	1a9b      	subgt	r3, r3, r2
 8000c84:	18ed      	addgt	r5, r5, r3
 8000c86:	2600      	movs	r6, #0
 8000c88:	341a      	adds	r4, #26
 8000c8a:	42b5      	cmp	r5, r6
 8000c8c:	d11a      	bne.n	8000cc4 <_printf_common+0xc8>
 8000c8e:	2000      	movs	r0, #0
 8000c90:	e008      	b.n	8000ca4 <_printf_common+0xa8>
 8000c92:	2301      	movs	r3, #1
 8000c94:	4652      	mov	r2, sl
 8000c96:	4649      	mov	r1, r9
 8000c98:	4638      	mov	r0, r7
 8000c9a:	47c0      	blx	r8
 8000c9c:	3001      	adds	r0, #1
 8000c9e:	d103      	bne.n	8000ca8 <_printf_common+0xac>
 8000ca0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ca4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca8:	3501      	adds	r5, #1
 8000caa:	e7c6      	b.n	8000c3a <_printf_common+0x3e>
 8000cac:	18e1      	adds	r1, r4, r3
 8000cae:	1c5a      	adds	r2, r3, #1
 8000cb0:	2030      	movs	r0, #48	; 0x30
 8000cb2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000cb6:	4422      	add	r2, r4
 8000cb8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000cbc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000cc0:	3302      	adds	r3, #2
 8000cc2:	e7c7      	b.n	8000c54 <_printf_common+0x58>
 8000cc4:	2301      	movs	r3, #1
 8000cc6:	4622      	mov	r2, r4
 8000cc8:	4649      	mov	r1, r9
 8000cca:	4638      	mov	r0, r7
 8000ccc:	47c0      	blx	r8
 8000cce:	3001      	adds	r0, #1
 8000cd0:	d0e6      	beq.n	8000ca0 <_printf_common+0xa4>
 8000cd2:	3601      	adds	r6, #1
 8000cd4:	e7d9      	b.n	8000c8a <_printf_common+0x8e>
	...

08000cd8 <_printf_i>:
 8000cd8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cdc:	7e0f      	ldrb	r7, [r1, #24]
 8000cde:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000ce0:	2f78      	cmp	r7, #120	; 0x78
 8000ce2:	4691      	mov	r9, r2
 8000ce4:	4680      	mov	r8, r0
 8000ce6:	460c      	mov	r4, r1
 8000ce8:	469a      	mov	sl, r3
 8000cea:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000cee:	d807      	bhi.n	8000d00 <_printf_i+0x28>
 8000cf0:	2f62      	cmp	r7, #98	; 0x62
 8000cf2:	d80a      	bhi.n	8000d0a <_printf_i+0x32>
 8000cf4:	2f00      	cmp	r7, #0
 8000cf6:	f000 80d4 	beq.w	8000ea2 <_printf_i+0x1ca>
 8000cfa:	2f58      	cmp	r7, #88	; 0x58
 8000cfc:	f000 80c0 	beq.w	8000e80 <_printf_i+0x1a8>
 8000d00:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d04:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d08:	e03a      	b.n	8000d80 <_printf_i+0xa8>
 8000d0a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d0e:	2b15      	cmp	r3, #21
 8000d10:	d8f6      	bhi.n	8000d00 <_printf_i+0x28>
 8000d12:	a101      	add	r1, pc, #4	; (adr r1, 8000d18 <_printf_i+0x40>)
 8000d14:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d18:	08000d71 	.word	0x08000d71
 8000d1c:	08000d85 	.word	0x08000d85
 8000d20:	08000d01 	.word	0x08000d01
 8000d24:	08000d01 	.word	0x08000d01
 8000d28:	08000d01 	.word	0x08000d01
 8000d2c:	08000d01 	.word	0x08000d01
 8000d30:	08000d85 	.word	0x08000d85
 8000d34:	08000d01 	.word	0x08000d01
 8000d38:	08000d01 	.word	0x08000d01
 8000d3c:	08000d01 	.word	0x08000d01
 8000d40:	08000d01 	.word	0x08000d01
 8000d44:	08000e89 	.word	0x08000e89
 8000d48:	08000db1 	.word	0x08000db1
 8000d4c:	08000e43 	.word	0x08000e43
 8000d50:	08000d01 	.word	0x08000d01
 8000d54:	08000d01 	.word	0x08000d01
 8000d58:	08000eab 	.word	0x08000eab
 8000d5c:	08000d01 	.word	0x08000d01
 8000d60:	08000db1 	.word	0x08000db1
 8000d64:	08000d01 	.word	0x08000d01
 8000d68:	08000d01 	.word	0x08000d01
 8000d6c:	08000e4b 	.word	0x08000e4b
 8000d70:	682b      	ldr	r3, [r5, #0]
 8000d72:	1d1a      	adds	r2, r3, #4
 8000d74:	681b      	ldr	r3, [r3, #0]
 8000d76:	602a      	str	r2, [r5, #0]
 8000d78:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d7c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d80:	2301      	movs	r3, #1
 8000d82:	e09f      	b.n	8000ec4 <_printf_i+0x1ec>
 8000d84:	6820      	ldr	r0, [r4, #0]
 8000d86:	682b      	ldr	r3, [r5, #0]
 8000d88:	0607      	lsls	r7, r0, #24
 8000d8a:	f103 0104 	add.w	r1, r3, #4
 8000d8e:	6029      	str	r1, [r5, #0]
 8000d90:	d501      	bpl.n	8000d96 <_printf_i+0xbe>
 8000d92:	681e      	ldr	r6, [r3, #0]
 8000d94:	e003      	b.n	8000d9e <_printf_i+0xc6>
 8000d96:	0646      	lsls	r6, r0, #25
 8000d98:	d5fb      	bpl.n	8000d92 <_printf_i+0xba>
 8000d9a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000d9e:	2e00      	cmp	r6, #0
 8000da0:	da03      	bge.n	8000daa <_printf_i+0xd2>
 8000da2:	232d      	movs	r3, #45	; 0x2d
 8000da4:	4276      	negs	r6, r6
 8000da6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000daa:	485a      	ldr	r0, [pc, #360]	; (8000f14 <_printf_i+0x23c>)
 8000dac:	230a      	movs	r3, #10
 8000dae:	e012      	b.n	8000dd6 <_printf_i+0xfe>
 8000db0:	682b      	ldr	r3, [r5, #0]
 8000db2:	6820      	ldr	r0, [r4, #0]
 8000db4:	1d19      	adds	r1, r3, #4
 8000db6:	6029      	str	r1, [r5, #0]
 8000db8:	0605      	lsls	r5, r0, #24
 8000dba:	d501      	bpl.n	8000dc0 <_printf_i+0xe8>
 8000dbc:	681e      	ldr	r6, [r3, #0]
 8000dbe:	e002      	b.n	8000dc6 <_printf_i+0xee>
 8000dc0:	0641      	lsls	r1, r0, #25
 8000dc2:	d5fb      	bpl.n	8000dbc <_printf_i+0xe4>
 8000dc4:	881e      	ldrh	r6, [r3, #0]
 8000dc6:	4853      	ldr	r0, [pc, #332]	; (8000f14 <_printf_i+0x23c>)
 8000dc8:	2f6f      	cmp	r7, #111	; 0x6f
 8000dca:	bf0c      	ite	eq
 8000dcc:	2308      	moveq	r3, #8
 8000dce:	230a      	movne	r3, #10
 8000dd0:	2100      	movs	r1, #0
 8000dd2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000dd6:	6865      	ldr	r5, [r4, #4]
 8000dd8:	60a5      	str	r5, [r4, #8]
 8000dda:	2d00      	cmp	r5, #0
 8000ddc:	bfa2      	ittt	ge
 8000dde:	6821      	ldrge	r1, [r4, #0]
 8000de0:	f021 0104 	bicge.w	r1, r1, #4
 8000de4:	6021      	strge	r1, [r4, #0]
 8000de6:	b90e      	cbnz	r6, 8000dec <_printf_i+0x114>
 8000de8:	2d00      	cmp	r5, #0
 8000dea:	d04b      	beq.n	8000e84 <_printf_i+0x1ac>
 8000dec:	4615      	mov	r5, r2
 8000dee:	fbb6 f1f3 	udiv	r1, r6, r3
 8000df2:	fb03 6711 	mls	r7, r3, r1, r6
 8000df6:	5dc7      	ldrb	r7, [r0, r7]
 8000df8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000dfc:	4637      	mov	r7, r6
 8000dfe:	42bb      	cmp	r3, r7
 8000e00:	460e      	mov	r6, r1
 8000e02:	d9f4      	bls.n	8000dee <_printf_i+0x116>
 8000e04:	2b08      	cmp	r3, #8
 8000e06:	d10b      	bne.n	8000e20 <_printf_i+0x148>
 8000e08:	6823      	ldr	r3, [r4, #0]
 8000e0a:	07de      	lsls	r6, r3, #31
 8000e0c:	d508      	bpl.n	8000e20 <_printf_i+0x148>
 8000e0e:	6923      	ldr	r3, [r4, #16]
 8000e10:	6861      	ldr	r1, [r4, #4]
 8000e12:	4299      	cmp	r1, r3
 8000e14:	bfde      	ittt	le
 8000e16:	2330      	movle	r3, #48	; 0x30
 8000e18:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e1c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e20:	1b52      	subs	r2, r2, r5
 8000e22:	6122      	str	r2, [r4, #16]
 8000e24:	f8cd a000 	str.w	sl, [sp]
 8000e28:	464b      	mov	r3, r9
 8000e2a:	aa03      	add	r2, sp, #12
 8000e2c:	4621      	mov	r1, r4
 8000e2e:	4640      	mov	r0, r8
 8000e30:	f7ff fee4 	bl	8000bfc <_printf_common>
 8000e34:	3001      	adds	r0, #1
 8000e36:	d14a      	bne.n	8000ece <_printf_i+0x1f6>
 8000e38:	f04f 30ff 	mov.w	r0, #4294967295
 8000e3c:	b004      	add	sp, #16
 8000e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e42:	6823      	ldr	r3, [r4, #0]
 8000e44:	f043 0320 	orr.w	r3, r3, #32
 8000e48:	6023      	str	r3, [r4, #0]
 8000e4a:	4833      	ldr	r0, [pc, #204]	; (8000f18 <_printf_i+0x240>)
 8000e4c:	2778      	movs	r7, #120	; 0x78
 8000e4e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e52:	6823      	ldr	r3, [r4, #0]
 8000e54:	6829      	ldr	r1, [r5, #0]
 8000e56:	061f      	lsls	r7, r3, #24
 8000e58:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e5c:	d402      	bmi.n	8000e64 <_printf_i+0x18c>
 8000e5e:	065f      	lsls	r7, r3, #25
 8000e60:	bf48      	it	mi
 8000e62:	b2b6      	uxthmi	r6, r6
 8000e64:	07df      	lsls	r7, r3, #31
 8000e66:	bf48      	it	mi
 8000e68:	f043 0320 	orrmi.w	r3, r3, #32
 8000e6c:	6029      	str	r1, [r5, #0]
 8000e6e:	bf48      	it	mi
 8000e70:	6023      	strmi	r3, [r4, #0]
 8000e72:	b91e      	cbnz	r6, 8000e7c <_printf_i+0x1a4>
 8000e74:	6823      	ldr	r3, [r4, #0]
 8000e76:	f023 0320 	bic.w	r3, r3, #32
 8000e7a:	6023      	str	r3, [r4, #0]
 8000e7c:	2310      	movs	r3, #16
 8000e7e:	e7a7      	b.n	8000dd0 <_printf_i+0xf8>
 8000e80:	4824      	ldr	r0, [pc, #144]	; (8000f14 <_printf_i+0x23c>)
 8000e82:	e7e4      	b.n	8000e4e <_printf_i+0x176>
 8000e84:	4615      	mov	r5, r2
 8000e86:	e7bd      	b.n	8000e04 <_printf_i+0x12c>
 8000e88:	682b      	ldr	r3, [r5, #0]
 8000e8a:	6826      	ldr	r6, [r4, #0]
 8000e8c:	6961      	ldr	r1, [r4, #20]
 8000e8e:	1d18      	adds	r0, r3, #4
 8000e90:	6028      	str	r0, [r5, #0]
 8000e92:	0635      	lsls	r5, r6, #24
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	d501      	bpl.n	8000e9c <_printf_i+0x1c4>
 8000e98:	6019      	str	r1, [r3, #0]
 8000e9a:	e002      	b.n	8000ea2 <_printf_i+0x1ca>
 8000e9c:	0670      	lsls	r0, r6, #25
 8000e9e:	d5fb      	bpl.n	8000e98 <_printf_i+0x1c0>
 8000ea0:	8019      	strh	r1, [r3, #0]
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	6123      	str	r3, [r4, #16]
 8000ea6:	4615      	mov	r5, r2
 8000ea8:	e7bc      	b.n	8000e24 <_printf_i+0x14c>
 8000eaa:	682b      	ldr	r3, [r5, #0]
 8000eac:	1d1a      	adds	r2, r3, #4
 8000eae:	602a      	str	r2, [r5, #0]
 8000eb0:	681d      	ldr	r5, [r3, #0]
 8000eb2:	6862      	ldr	r2, [r4, #4]
 8000eb4:	2100      	movs	r1, #0
 8000eb6:	4628      	mov	r0, r5
 8000eb8:	f7ff f99a 	bl	80001f0 <memchr>
 8000ebc:	b108      	cbz	r0, 8000ec2 <_printf_i+0x1ea>
 8000ebe:	1b40      	subs	r0, r0, r5
 8000ec0:	6060      	str	r0, [r4, #4]
 8000ec2:	6863      	ldr	r3, [r4, #4]
 8000ec4:	6123      	str	r3, [r4, #16]
 8000ec6:	2300      	movs	r3, #0
 8000ec8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ecc:	e7aa      	b.n	8000e24 <_printf_i+0x14c>
 8000ece:	6923      	ldr	r3, [r4, #16]
 8000ed0:	462a      	mov	r2, r5
 8000ed2:	4649      	mov	r1, r9
 8000ed4:	4640      	mov	r0, r8
 8000ed6:	47d0      	blx	sl
 8000ed8:	3001      	adds	r0, #1
 8000eda:	d0ad      	beq.n	8000e38 <_printf_i+0x160>
 8000edc:	6823      	ldr	r3, [r4, #0]
 8000ede:	079b      	lsls	r3, r3, #30
 8000ee0:	d413      	bmi.n	8000f0a <_printf_i+0x232>
 8000ee2:	68e0      	ldr	r0, [r4, #12]
 8000ee4:	9b03      	ldr	r3, [sp, #12]
 8000ee6:	4298      	cmp	r0, r3
 8000ee8:	bfb8      	it	lt
 8000eea:	4618      	movlt	r0, r3
 8000eec:	e7a6      	b.n	8000e3c <_printf_i+0x164>
 8000eee:	2301      	movs	r3, #1
 8000ef0:	4632      	mov	r2, r6
 8000ef2:	4649      	mov	r1, r9
 8000ef4:	4640      	mov	r0, r8
 8000ef6:	47d0      	blx	sl
 8000ef8:	3001      	adds	r0, #1
 8000efa:	d09d      	beq.n	8000e38 <_printf_i+0x160>
 8000efc:	3501      	adds	r5, #1
 8000efe:	68e3      	ldr	r3, [r4, #12]
 8000f00:	9903      	ldr	r1, [sp, #12]
 8000f02:	1a5b      	subs	r3, r3, r1
 8000f04:	42ab      	cmp	r3, r5
 8000f06:	dcf2      	bgt.n	8000eee <_printf_i+0x216>
 8000f08:	e7eb      	b.n	8000ee2 <_printf_i+0x20a>
 8000f0a:	2500      	movs	r5, #0
 8000f0c:	f104 0619 	add.w	r6, r4, #25
 8000f10:	e7f5      	b.n	8000efe <_printf_i+0x226>
 8000f12:	bf00      	nop
 8000f14:	08001302 	.word	0x08001302
 8000f18:	08001313 	.word	0x08001313

08000f1c <__sflush_r>:
 8000f1c:	898a      	ldrh	r2, [r1, #12]
 8000f1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f22:	4605      	mov	r5, r0
 8000f24:	0710      	lsls	r0, r2, #28
 8000f26:	460c      	mov	r4, r1
 8000f28:	d458      	bmi.n	8000fdc <__sflush_r+0xc0>
 8000f2a:	684b      	ldr	r3, [r1, #4]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	dc05      	bgt.n	8000f3c <__sflush_r+0x20>
 8000f30:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f32:	2b00      	cmp	r3, #0
 8000f34:	dc02      	bgt.n	8000f3c <__sflush_r+0x20>
 8000f36:	2000      	movs	r0, #0
 8000f38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f3c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f3e:	2e00      	cmp	r6, #0
 8000f40:	d0f9      	beq.n	8000f36 <__sflush_r+0x1a>
 8000f42:	2300      	movs	r3, #0
 8000f44:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f48:	682f      	ldr	r7, [r5, #0]
 8000f4a:	6a21      	ldr	r1, [r4, #32]
 8000f4c:	602b      	str	r3, [r5, #0]
 8000f4e:	d032      	beq.n	8000fb6 <__sflush_r+0x9a>
 8000f50:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f52:	89a3      	ldrh	r3, [r4, #12]
 8000f54:	075a      	lsls	r2, r3, #29
 8000f56:	d505      	bpl.n	8000f64 <__sflush_r+0x48>
 8000f58:	6863      	ldr	r3, [r4, #4]
 8000f5a:	1ac0      	subs	r0, r0, r3
 8000f5c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f5e:	b10b      	cbz	r3, 8000f64 <__sflush_r+0x48>
 8000f60:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f62:	1ac0      	subs	r0, r0, r3
 8000f64:	2300      	movs	r3, #0
 8000f66:	4602      	mov	r2, r0
 8000f68:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f6a:	6a21      	ldr	r1, [r4, #32]
 8000f6c:	4628      	mov	r0, r5
 8000f6e:	47b0      	blx	r6
 8000f70:	1c43      	adds	r3, r0, #1
 8000f72:	89a3      	ldrh	r3, [r4, #12]
 8000f74:	d106      	bne.n	8000f84 <__sflush_r+0x68>
 8000f76:	6829      	ldr	r1, [r5, #0]
 8000f78:	291d      	cmp	r1, #29
 8000f7a:	d82b      	bhi.n	8000fd4 <__sflush_r+0xb8>
 8000f7c:	4a29      	ldr	r2, [pc, #164]	; (8001024 <__sflush_r+0x108>)
 8000f7e:	410a      	asrs	r2, r1
 8000f80:	07d6      	lsls	r6, r2, #31
 8000f82:	d427      	bmi.n	8000fd4 <__sflush_r+0xb8>
 8000f84:	2200      	movs	r2, #0
 8000f86:	6062      	str	r2, [r4, #4]
 8000f88:	04d9      	lsls	r1, r3, #19
 8000f8a:	6922      	ldr	r2, [r4, #16]
 8000f8c:	6022      	str	r2, [r4, #0]
 8000f8e:	d504      	bpl.n	8000f9a <__sflush_r+0x7e>
 8000f90:	1c42      	adds	r2, r0, #1
 8000f92:	d101      	bne.n	8000f98 <__sflush_r+0x7c>
 8000f94:	682b      	ldr	r3, [r5, #0]
 8000f96:	b903      	cbnz	r3, 8000f9a <__sflush_r+0x7e>
 8000f98:	6560      	str	r0, [r4, #84]	; 0x54
 8000f9a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f9c:	602f      	str	r7, [r5, #0]
 8000f9e:	2900      	cmp	r1, #0
 8000fa0:	d0c9      	beq.n	8000f36 <__sflush_r+0x1a>
 8000fa2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fa6:	4299      	cmp	r1, r3
 8000fa8:	d002      	beq.n	8000fb0 <__sflush_r+0x94>
 8000faa:	4628      	mov	r0, r5
 8000fac:	f7ff fbea 	bl	8000784 <_free_r>
 8000fb0:	2000      	movs	r0, #0
 8000fb2:	6360      	str	r0, [r4, #52]	; 0x34
 8000fb4:	e7c0      	b.n	8000f38 <__sflush_r+0x1c>
 8000fb6:	2301      	movs	r3, #1
 8000fb8:	4628      	mov	r0, r5
 8000fba:	47b0      	blx	r6
 8000fbc:	1c41      	adds	r1, r0, #1
 8000fbe:	d1c8      	bne.n	8000f52 <__sflush_r+0x36>
 8000fc0:	682b      	ldr	r3, [r5, #0]
 8000fc2:	2b00      	cmp	r3, #0
 8000fc4:	d0c5      	beq.n	8000f52 <__sflush_r+0x36>
 8000fc6:	2b1d      	cmp	r3, #29
 8000fc8:	d001      	beq.n	8000fce <__sflush_r+0xb2>
 8000fca:	2b16      	cmp	r3, #22
 8000fcc:	d101      	bne.n	8000fd2 <__sflush_r+0xb6>
 8000fce:	602f      	str	r7, [r5, #0]
 8000fd0:	e7b1      	b.n	8000f36 <__sflush_r+0x1a>
 8000fd2:	89a3      	ldrh	r3, [r4, #12]
 8000fd4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fd8:	81a3      	strh	r3, [r4, #12]
 8000fda:	e7ad      	b.n	8000f38 <__sflush_r+0x1c>
 8000fdc:	690f      	ldr	r7, [r1, #16]
 8000fde:	2f00      	cmp	r7, #0
 8000fe0:	d0a9      	beq.n	8000f36 <__sflush_r+0x1a>
 8000fe2:	0793      	lsls	r3, r2, #30
 8000fe4:	680e      	ldr	r6, [r1, #0]
 8000fe6:	bf08      	it	eq
 8000fe8:	694b      	ldreq	r3, [r1, #20]
 8000fea:	600f      	str	r7, [r1, #0]
 8000fec:	bf18      	it	ne
 8000fee:	2300      	movne	r3, #0
 8000ff0:	eba6 0807 	sub.w	r8, r6, r7
 8000ff4:	608b      	str	r3, [r1, #8]
 8000ff6:	f1b8 0f00 	cmp.w	r8, #0
 8000ffa:	dd9c      	ble.n	8000f36 <__sflush_r+0x1a>
 8000ffc:	6a21      	ldr	r1, [r4, #32]
 8000ffe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001000:	4643      	mov	r3, r8
 8001002:	463a      	mov	r2, r7
 8001004:	4628      	mov	r0, r5
 8001006:	47b0      	blx	r6
 8001008:	2800      	cmp	r0, #0
 800100a:	dc06      	bgt.n	800101a <__sflush_r+0xfe>
 800100c:	89a3      	ldrh	r3, [r4, #12]
 800100e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001012:	81a3      	strh	r3, [r4, #12]
 8001014:	f04f 30ff 	mov.w	r0, #4294967295
 8001018:	e78e      	b.n	8000f38 <__sflush_r+0x1c>
 800101a:	4407      	add	r7, r0
 800101c:	eba8 0800 	sub.w	r8, r8, r0
 8001020:	e7e9      	b.n	8000ff6 <__sflush_r+0xda>
 8001022:	bf00      	nop
 8001024:	dfbffffe 	.word	0xdfbffffe

08001028 <_fflush_r>:
 8001028:	b538      	push	{r3, r4, r5, lr}
 800102a:	690b      	ldr	r3, [r1, #16]
 800102c:	4605      	mov	r5, r0
 800102e:	460c      	mov	r4, r1
 8001030:	b913      	cbnz	r3, 8001038 <_fflush_r+0x10>
 8001032:	2500      	movs	r5, #0
 8001034:	4628      	mov	r0, r5
 8001036:	bd38      	pop	{r3, r4, r5, pc}
 8001038:	b118      	cbz	r0, 8001042 <_fflush_r+0x1a>
 800103a:	6a03      	ldr	r3, [r0, #32]
 800103c:	b90b      	cbnz	r3, 8001042 <_fflush_r+0x1a>
 800103e:	f7ff fa99 	bl	8000574 <__sinit>
 8001042:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001046:	2b00      	cmp	r3, #0
 8001048:	d0f3      	beq.n	8001032 <_fflush_r+0xa>
 800104a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800104c:	07d0      	lsls	r0, r2, #31
 800104e:	d404      	bmi.n	800105a <_fflush_r+0x32>
 8001050:	0599      	lsls	r1, r3, #22
 8001052:	d402      	bmi.n	800105a <_fflush_r+0x32>
 8001054:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001056:	f7ff fb92 	bl	800077e <__retarget_lock_acquire_recursive>
 800105a:	4628      	mov	r0, r5
 800105c:	4621      	mov	r1, r4
 800105e:	f7ff ff5d 	bl	8000f1c <__sflush_r>
 8001062:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001064:	07da      	lsls	r2, r3, #31
 8001066:	4605      	mov	r5, r0
 8001068:	d4e4      	bmi.n	8001034 <_fflush_r+0xc>
 800106a:	89a3      	ldrh	r3, [r4, #12]
 800106c:	059b      	lsls	r3, r3, #22
 800106e:	d4e1      	bmi.n	8001034 <_fflush_r+0xc>
 8001070:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001072:	f7ff fb85 	bl	8000780 <__retarget_lock_release_recursive>
 8001076:	e7dd      	b.n	8001034 <_fflush_r+0xc>

08001078 <__swbuf_r>:
 8001078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800107a:	460e      	mov	r6, r1
 800107c:	4614      	mov	r4, r2
 800107e:	4605      	mov	r5, r0
 8001080:	b118      	cbz	r0, 800108a <__swbuf_r+0x12>
 8001082:	6a03      	ldr	r3, [r0, #32]
 8001084:	b90b      	cbnz	r3, 800108a <__swbuf_r+0x12>
 8001086:	f7ff fa75 	bl	8000574 <__sinit>
 800108a:	69a3      	ldr	r3, [r4, #24]
 800108c:	60a3      	str	r3, [r4, #8]
 800108e:	89a3      	ldrh	r3, [r4, #12]
 8001090:	071a      	lsls	r2, r3, #28
 8001092:	d525      	bpl.n	80010e0 <__swbuf_r+0x68>
 8001094:	6923      	ldr	r3, [r4, #16]
 8001096:	b31b      	cbz	r3, 80010e0 <__swbuf_r+0x68>
 8001098:	6823      	ldr	r3, [r4, #0]
 800109a:	6922      	ldr	r2, [r4, #16]
 800109c:	1a98      	subs	r0, r3, r2
 800109e:	6963      	ldr	r3, [r4, #20]
 80010a0:	b2f6      	uxtb	r6, r6
 80010a2:	4283      	cmp	r3, r0
 80010a4:	4637      	mov	r7, r6
 80010a6:	dc04      	bgt.n	80010b2 <__swbuf_r+0x3a>
 80010a8:	4621      	mov	r1, r4
 80010aa:	4628      	mov	r0, r5
 80010ac:	f7ff ffbc 	bl	8001028 <_fflush_r>
 80010b0:	b9e0      	cbnz	r0, 80010ec <__swbuf_r+0x74>
 80010b2:	68a3      	ldr	r3, [r4, #8]
 80010b4:	3b01      	subs	r3, #1
 80010b6:	60a3      	str	r3, [r4, #8]
 80010b8:	6823      	ldr	r3, [r4, #0]
 80010ba:	1c5a      	adds	r2, r3, #1
 80010bc:	6022      	str	r2, [r4, #0]
 80010be:	701e      	strb	r6, [r3, #0]
 80010c0:	6962      	ldr	r2, [r4, #20]
 80010c2:	1c43      	adds	r3, r0, #1
 80010c4:	429a      	cmp	r2, r3
 80010c6:	d004      	beq.n	80010d2 <__swbuf_r+0x5a>
 80010c8:	89a3      	ldrh	r3, [r4, #12]
 80010ca:	07db      	lsls	r3, r3, #31
 80010cc:	d506      	bpl.n	80010dc <__swbuf_r+0x64>
 80010ce:	2e0a      	cmp	r6, #10
 80010d0:	d104      	bne.n	80010dc <__swbuf_r+0x64>
 80010d2:	4621      	mov	r1, r4
 80010d4:	4628      	mov	r0, r5
 80010d6:	f7ff ffa7 	bl	8001028 <_fflush_r>
 80010da:	b938      	cbnz	r0, 80010ec <__swbuf_r+0x74>
 80010dc:	4638      	mov	r0, r7
 80010de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010e0:	4621      	mov	r1, r4
 80010e2:	4628      	mov	r0, r5
 80010e4:	f000 f806 	bl	80010f4 <__swsetup_r>
 80010e8:	2800      	cmp	r0, #0
 80010ea:	d0d5      	beq.n	8001098 <__swbuf_r+0x20>
 80010ec:	f04f 37ff 	mov.w	r7, #4294967295
 80010f0:	e7f4      	b.n	80010dc <__swbuf_r+0x64>
	...

080010f4 <__swsetup_r>:
 80010f4:	b538      	push	{r3, r4, r5, lr}
 80010f6:	4b2a      	ldr	r3, [pc, #168]	; (80011a0 <__swsetup_r+0xac>)
 80010f8:	4605      	mov	r5, r0
 80010fa:	6818      	ldr	r0, [r3, #0]
 80010fc:	460c      	mov	r4, r1
 80010fe:	b118      	cbz	r0, 8001108 <__swsetup_r+0x14>
 8001100:	6a03      	ldr	r3, [r0, #32]
 8001102:	b90b      	cbnz	r3, 8001108 <__swsetup_r+0x14>
 8001104:	f7ff fa36 	bl	8000574 <__sinit>
 8001108:	89a3      	ldrh	r3, [r4, #12]
 800110a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800110e:	0718      	lsls	r0, r3, #28
 8001110:	d422      	bmi.n	8001158 <__swsetup_r+0x64>
 8001112:	06d9      	lsls	r1, r3, #27
 8001114:	d407      	bmi.n	8001126 <__swsetup_r+0x32>
 8001116:	2309      	movs	r3, #9
 8001118:	602b      	str	r3, [r5, #0]
 800111a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800111e:	81a3      	strh	r3, [r4, #12]
 8001120:	f04f 30ff 	mov.w	r0, #4294967295
 8001124:	e034      	b.n	8001190 <__swsetup_r+0x9c>
 8001126:	0758      	lsls	r0, r3, #29
 8001128:	d512      	bpl.n	8001150 <__swsetup_r+0x5c>
 800112a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800112c:	b141      	cbz	r1, 8001140 <__swsetup_r+0x4c>
 800112e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001132:	4299      	cmp	r1, r3
 8001134:	d002      	beq.n	800113c <__swsetup_r+0x48>
 8001136:	4628      	mov	r0, r5
 8001138:	f7ff fb24 	bl	8000784 <_free_r>
 800113c:	2300      	movs	r3, #0
 800113e:	6363      	str	r3, [r4, #52]	; 0x34
 8001140:	89a3      	ldrh	r3, [r4, #12]
 8001142:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001146:	81a3      	strh	r3, [r4, #12]
 8001148:	2300      	movs	r3, #0
 800114a:	6063      	str	r3, [r4, #4]
 800114c:	6923      	ldr	r3, [r4, #16]
 800114e:	6023      	str	r3, [r4, #0]
 8001150:	89a3      	ldrh	r3, [r4, #12]
 8001152:	f043 0308 	orr.w	r3, r3, #8
 8001156:	81a3      	strh	r3, [r4, #12]
 8001158:	6923      	ldr	r3, [r4, #16]
 800115a:	b94b      	cbnz	r3, 8001170 <__swsetup_r+0x7c>
 800115c:	89a3      	ldrh	r3, [r4, #12]
 800115e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001162:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001166:	d003      	beq.n	8001170 <__swsetup_r+0x7c>
 8001168:	4621      	mov	r1, r4
 800116a:	4628      	mov	r0, r5
 800116c:	f000 f850 	bl	8001210 <__smakebuf_r>
 8001170:	89a0      	ldrh	r0, [r4, #12]
 8001172:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001176:	f010 0301 	ands.w	r3, r0, #1
 800117a:	d00a      	beq.n	8001192 <__swsetup_r+0x9e>
 800117c:	2300      	movs	r3, #0
 800117e:	60a3      	str	r3, [r4, #8]
 8001180:	6963      	ldr	r3, [r4, #20]
 8001182:	425b      	negs	r3, r3
 8001184:	61a3      	str	r3, [r4, #24]
 8001186:	6923      	ldr	r3, [r4, #16]
 8001188:	b943      	cbnz	r3, 800119c <__swsetup_r+0xa8>
 800118a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800118e:	d1c4      	bne.n	800111a <__swsetup_r+0x26>
 8001190:	bd38      	pop	{r3, r4, r5, pc}
 8001192:	0781      	lsls	r1, r0, #30
 8001194:	bf58      	it	pl
 8001196:	6963      	ldrpl	r3, [r4, #20]
 8001198:	60a3      	str	r3, [r4, #8]
 800119a:	e7f4      	b.n	8001186 <__swsetup_r+0x92>
 800119c:	2000      	movs	r0, #0
 800119e:	e7f7      	b.n	8001190 <__swsetup_r+0x9c>
 80011a0:	20000060 	.word	0x20000060

080011a4 <_sbrk_r>:
 80011a4:	b538      	push	{r3, r4, r5, lr}
 80011a6:	4d06      	ldr	r5, [pc, #24]	; (80011c0 <_sbrk_r+0x1c>)
 80011a8:	2300      	movs	r3, #0
 80011aa:	4604      	mov	r4, r0
 80011ac:	4608      	mov	r0, r1
 80011ae:	602b      	str	r3, [r5, #0]
 80011b0:	f7ff f8f4 	bl	800039c <_sbrk>
 80011b4:	1c43      	adds	r3, r0, #1
 80011b6:	d102      	bne.n	80011be <_sbrk_r+0x1a>
 80011b8:	682b      	ldr	r3, [r5, #0]
 80011ba:	b103      	cbz	r3, 80011be <_sbrk_r+0x1a>
 80011bc:	6023      	str	r3, [r4, #0]
 80011be:	bd38      	pop	{r3, r4, r5, pc}
 80011c0:	200001c4 	.word	0x200001c4

080011c4 <__swhatbuf_r>:
 80011c4:	b570      	push	{r4, r5, r6, lr}
 80011c6:	460c      	mov	r4, r1
 80011c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011cc:	2900      	cmp	r1, #0
 80011ce:	b096      	sub	sp, #88	; 0x58
 80011d0:	4615      	mov	r5, r2
 80011d2:	461e      	mov	r6, r3
 80011d4:	da0d      	bge.n	80011f2 <__swhatbuf_r+0x2e>
 80011d6:	89a3      	ldrh	r3, [r4, #12]
 80011d8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011dc:	f04f 0100 	mov.w	r1, #0
 80011e0:	bf0c      	ite	eq
 80011e2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011e6:	2340      	movne	r3, #64	; 0x40
 80011e8:	2000      	movs	r0, #0
 80011ea:	6031      	str	r1, [r6, #0]
 80011ec:	602b      	str	r3, [r5, #0]
 80011ee:	b016      	add	sp, #88	; 0x58
 80011f0:	bd70      	pop	{r4, r5, r6, pc}
 80011f2:	466a      	mov	r2, sp
 80011f4:	f000 f848 	bl	8001288 <_fstat_r>
 80011f8:	2800      	cmp	r0, #0
 80011fa:	dbec      	blt.n	80011d6 <__swhatbuf_r+0x12>
 80011fc:	9901      	ldr	r1, [sp, #4]
 80011fe:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001202:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001206:	4259      	negs	r1, r3
 8001208:	4159      	adcs	r1, r3
 800120a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800120e:	e7eb      	b.n	80011e8 <__swhatbuf_r+0x24>

08001210 <__smakebuf_r>:
 8001210:	898b      	ldrh	r3, [r1, #12]
 8001212:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001214:	079d      	lsls	r5, r3, #30
 8001216:	4606      	mov	r6, r0
 8001218:	460c      	mov	r4, r1
 800121a:	d507      	bpl.n	800122c <__smakebuf_r+0x1c>
 800121c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001220:	6023      	str	r3, [r4, #0]
 8001222:	6123      	str	r3, [r4, #16]
 8001224:	2301      	movs	r3, #1
 8001226:	6163      	str	r3, [r4, #20]
 8001228:	b002      	add	sp, #8
 800122a:	bd70      	pop	{r4, r5, r6, pc}
 800122c:	ab01      	add	r3, sp, #4
 800122e:	466a      	mov	r2, sp
 8001230:	f7ff ffc8 	bl	80011c4 <__swhatbuf_r>
 8001234:	9900      	ldr	r1, [sp, #0]
 8001236:	4605      	mov	r5, r0
 8001238:	4630      	mov	r0, r6
 800123a:	f7ff fb0f 	bl	800085c <_malloc_r>
 800123e:	b948      	cbnz	r0, 8001254 <__smakebuf_r+0x44>
 8001240:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001244:	059a      	lsls	r2, r3, #22
 8001246:	d4ef      	bmi.n	8001228 <__smakebuf_r+0x18>
 8001248:	f023 0303 	bic.w	r3, r3, #3
 800124c:	f043 0302 	orr.w	r3, r3, #2
 8001250:	81a3      	strh	r3, [r4, #12]
 8001252:	e7e3      	b.n	800121c <__smakebuf_r+0xc>
 8001254:	89a3      	ldrh	r3, [r4, #12]
 8001256:	6020      	str	r0, [r4, #0]
 8001258:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800125c:	81a3      	strh	r3, [r4, #12]
 800125e:	9b00      	ldr	r3, [sp, #0]
 8001260:	6163      	str	r3, [r4, #20]
 8001262:	9b01      	ldr	r3, [sp, #4]
 8001264:	6120      	str	r0, [r4, #16]
 8001266:	b15b      	cbz	r3, 8001280 <__smakebuf_r+0x70>
 8001268:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800126c:	4630      	mov	r0, r6
 800126e:	f000 f81d 	bl	80012ac <_isatty_r>
 8001272:	b128      	cbz	r0, 8001280 <__smakebuf_r+0x70>
 8001274:	89a3      	ldrh	r3, [r4, #12]
 8001276:	f023 0303 	bic.w	r3, r3, #3
 800127a:	f043 0301 	orr.w	r3, r3, #1
 800127e:	81a3      	strh	r3, [r4, #12]
 8001280:	89a3      	ldrh	r3, [r4, #12]
 8001282:	431d      	orrs	r5, r3
 8001284:	81a5      	strh	r5, [r4, #12]
 8001286:	e7cf      	b.n	8001228 <__smakebuf_r+0x18>

08001288 <_fstat_r>:
 8001288:	b538      	push	{r3, r4, r5, lr}
 800128a:	4d07      	ldr	r5, [pc, #28]	; (80012a8 <_fstat_r+0x20>)
 800128c:	2300      	movs	r3, #0
 800128e:	4604      	mov	r4, r0
 8001290:	4608      	mov	r0, r1
 8001292:	4611      	mov	r1, r2
 8001294:	602b      	str	r3, [r5, #0]
 8001296:	f7ff f858 	bl	800034a <_fstat>
 800129a:	1c43      	adds	r3, r0, #1
 800129c:	d102      	bne.n	80012a4 <_fstat_r+0x1c>
 800129e:	682b      	ldr	r3, [r5, #0]
 80012a0:	b103      	cbz	r3, 80012a4 <_fstat_r+0x1c>
 80012a2:	6023      	str	r3, [r4, #0]
 80012a4:	bd38      	pop	{r3, r4, r5, pc}
 80012a6:	bf00      	nop
 80012a8:	200001c4 	.word	0x200001c4

080012ac <_isatty_r>:
 80012ac:	b538      	push	{r3, r4, r5, lr}
 80012ae:	4d06      	ldr	r5, [pc, #24]	; (80012c8 <_isatty_r+0x1c>)
 80012b0:	2300      	movs	r3, #0
 80012b2:	4604      	mov	r4, r0
 80012b4:	4608      	mov	r0, r1
 80012b6:	602b      	str	r3, [r5, #0]
 80012b8:	f7ff f857 	bl	800036a <_isatty>
 80012bc:	1c43      	adds	r3, r0, #1
 80012be:	d102      	bne.n	80012c6 <_isatty_r+0x1a>
 80012c0:	682b      	ldr	r3, [r5, #0]
 80012c2:	b103      	cbz	r3, 80012c6 <_isatty_r+0x1a>
 80012c4:	6023      	str	r3, [r4, #0]
 80012c6:	bd38      	pop	{r3, r4, r5, pc}
 80012c8:	200001c4 	.word	0x200001c4

080012cc <_init>:
 80012cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ce:	bf00      	nop
 80012d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012d2:	bc08      	pop	{r3}
 80012d4:	469e      	mov	lr, r3
 80012d6:	4770      	bx	lr

080012d8 <_fini>:
 80012d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012da:	bf00      	nop
 80012dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012de:	bc08      	pop	{r3}
 80012e0:	469e      	mov	lr, r3
 80012e2:	4770      	bx	lr
